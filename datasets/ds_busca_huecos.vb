'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.2300
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.Data
Imports System.Runtime.Serialization
Imports System.Xml


<Serializable(),  _
 System.ComponentModel.DesignerCategoryAttribute("code"),  _
 System.Diagnostics.DebuggerStepThrough(),  _
 System.ComponentModel.ToolboxItem(true)>  _
Public Class ds_busca_huecos
    Inherits DataSet
    
    Private tableSP_CIMACEX_BUSCA_HUECOS As SP_CIMACEX_BUSCA_HUECOSDataTable
    
    Public Sub New()
        MyBase.New
        Me.InitClass
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler Me.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    Protected Sub New(ByVal info As SerializationInfo, ByVal context As StreamingContext)
        MyBase.New
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(System.String)),String)
        If (Not (strSchema) Is Nothing) Then
            Dim ds As DataSet = New DataSet
            ds.ReadXmlSchema(New XmlTextReader(New System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("SP_CIMACEX_BUSCA_HUECOS")) Is Nothing) Then
                Me.Tables.Add(New SP_CIMACEX_BUSCA_HUECOSDataTable(ds.Tables("SP_CIMACEX_BUSCA_HUECOS")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.InitClass
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler Me.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SP_CIMACEX_BUSCA_HUECOS As SP_CIMACEX_BUSCA_HUECOSDataTable
        Get
            Return Me.tableSP_CIMACEX_BUSCA_HUECOS
        End Get
    End Property
    
    Public Overrides Function Clone() As DataSet
        Dim cln As ds_busca_huecos = CType(MyBase.Clone,ds_busca_huecos)
        cln.InitVars
        Return cln
    End Function
    
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As XmlReader)
        Me.Reset
        Dim ds As DataSet = New DataSet
        ds.ReadXml(reader)
        If (Not (ds.Tables("SP_CIMACEX_BUSCA_HUECOS")) Is Nothing) Then
            Me.Tables.Add(New SP_CIMACEX_BUSCA_HUECOSDataTable(ds.Tables("SP_CIMACEX_BUSCA_HUECOS")))
        End If
        Me.DataSetName = ds.DataSetName
        Me.Prefix = ds.Prefix
        Me.Namespace = ds.Namespace
        Me.Locale = ds.Locale
        Me.CaseSensitive = ds.CaseSensitive
        Me.EnforceConstraints = ds.EnforceConstraints
        Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
        Me.InitVars
    End Sub
    
    Protected Overrides Function GetSchemaSerializable() As System.Xml.Schema.XmlSchema
        Dim stream As System.IO.MemoryStream = New System.IO.MemoryStream
        Me.WriteXmlSchema(New XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return System.Xml.Schema.XmlSchema.Read(New XmlTextReader(stream), Nothing)
    End Function
    
    Friend Sub InitVars()
        Me.tableSP_CIMACEX_BUSCA_HUECOS = CType(Me.Tables("SP_CIMACEX_BUSCA_HUECOS"),SP_CIMACEX_BUSCA_HUECOSDataTable)
        If (Not (Me.tableSP_CIMACEX_BUSCA_HUECOS) Is Nothing) Then
            Me.tableSP_CIMACEX_BUSCA_HUECOS.InitVars
        End If
    End Sub
    
    Private Sub InitClass()
        Me.DataSetName = "ds_busca_huecos"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/ds_busca_huecos.xsd"
        Me.Locale = New System.Globalization.CultureInfo("en-US")
        Me.CaseSensitive = false
        Me.EnforceConstraints = true
        Me.tableSP_CIMACEX_BUSCA_HUECOS = New SP_CIMACEX_BUSCA_HUECOSDataTable
        Me.Tables.Add(Me.tableSP_CIMACEX_BUSCA_HUECOS)
    End Sub
    
    Private Function ShouldSerializeSP_CIMACEX_BUSCA_HUECOS() As Boolean
        Return false
    End Function
    
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    Public Delegate Sub SP_CIMACEX_BUSCA_HUECOSRowChangeEventHandler(ByVal sender As Object, ByVal e As SP_CIMACEX_BUSCA_HUECOSRowChangeEvent)
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class SP_CIMACEX_BUSCA_HUECOSDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnhora_ini As DataColumn
        
        Private columnhora_fin As DataColumn
        
        Private columnbtimetabcode As DataColumn
        
        Private columndiardate As DataColumn
        
        Private columnok As DataColumn
        
        Private columndiardate1 As DataColumn
        
        Private columndia_semana As DataColumn
        
        Private columnagenname As DataColumn
        
        Private columnagencode As DataColumn
        
        Private columnpers_key As DataColumn
        
        Private columnfirm_key As DataColumn
        
        Private columncovegrou_key As DataColumn
        
        Private columnhpro_key As DataColumn
        
        Private columnduracion As DataColumn
        
        Friend Sub New()
            MyBase.New("SP_CIMACEX_BUSCA_HUECOS")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property hora_iniColumn As DataColumn
            Get
                Return Me.columnhora_ini
            End Get
        End Property
        
        Friend ReadOnly Property hora_finColumn As DataColumn
            Get
                Return Me.columnhora_fin
            End Get
        End Property
        
        Friend ReadOnly Property btimetabcodeColumn As DataColumn
            Get
                Return Me.columnbtimetabcode
            End Get
        End Property
        
        Friend ReadOnly Property diardateColumn As DataColumn
            Get
                Return Me.columndiardate
            End Get
        End Property
        
        Friend ReadOnly Property okColumn As DataColumn
            Get
                Return Me.columnok
            End Get
        End Property
        
        Friend ReadOnly Property diardate1Column As DataColumn
            Get
                Return Me.columndiardate1
            End Get
        End Property
        
        Friend ReadOnly Property dia_semanaColumn As DataColumn
            Get
                Return Me.columndia_semana
            End Get
        End Property
        
        Friend ReadOnly Property agennameColumn As DataColumn
            Get
                Return Me.columnagenname
            End Get
        End Property
        
        Friend ReadOnly Property agencodeColumn As DataColumn
            Get
                Return Me.columnagencode
            End Get
        End Property
        
        Friend ReadOnly Property pers_keyColumn As DataColumn
            Get
                Return Me.columnpers_key
            End Get
        End Property
        
        Friend ReadOnly Property firm_keyColumn As DataColumn
            Get
                Return Me.columnfirm_key
            End Get
        End Property
        
        Friend ReadOnly Property covegrou_keyColumn As DataColumn
            Get
                Return Me.columncovegrou_key
            End Get
        End Property
        
        Friend ReadOnly Property hpro_keyColumn As DataColumn
            Get
                Return Me.columnhpro_key
            End Get
        End Property
        
        Friend ReadOnly Property duracionColumn As DataColumn
            Get
                Return Me.columnduracion
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As SP_CIMACEX_BUSCA_HUECOSRow
            Get
                Return CType(Me.Rows(index),SP_CIMACEX_BUSCA_HUECOSRow)
            End Get
        End Property
        
        Public Event SP_CIMACEX_BUSCA_HUECOSRowChanged As SP_CIMACEX_BUSCA_HUECOSRowChangeEventHandler
        
        Public Event SP_CIMACEX_BUSCA_HUECOSRowChanging As SP_CIMACEX_BUSCA_HUECOSRowChangeEventHandler
        
        Public Event SP_CIMACEX_BUSCA_HUECOSRowDeleted As SP_CIMACEX_BUSCA_HUECOSRowChangeEventHandler
        
        Public Event SP_CIMACEX_BUSCA_HUECOSRowDeleting As SP_CIMACEX_BUSCA_HUECOSRowChangeEventHandler
        
        Public Overloads Sub AddSP_CIMACEX_BUSCA_HUECOSRow(ByVal row As SP_CIMACEX_BUSCA_HUECOSRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function AddSP_CIMACEX_BUSCA_HUECOSRow(ByVal hora_ini As String, ByVal hora_fin As String, ByVal btimetabcode As Integer, ByVal diardate As String, ByVal ok As String, ByVal diardate1 As Date, ByVal dia_semana As String, ByVal agenname As String, ByVal agencode As String, ByVal pers_key As Integer, ByVal firm_key As Integer, ByVal covegrou_key As Integer, ByVal hpro_key As Integer, ByVal duracion As Integer) As SP_CIMACEX_BUSCA_HUECOSRow
            Dim rowSP_CIMACEX_BUSCA_HUECOSRow As SP_CIMACEX_BUSCA_HUECOSRow = CType(Me.NewRow,SP_CIMACEX_BUSCA_HUECOSRow)
            rowSP_CIMACEX_BUSCA_HUECOSRow.ItemArray = New Object() {hora_ini, hora_fin, btimetabcode, diardate, ok, diardate1, dia_semana, agenname, agencode, pers_key, firm_key, covegrou_key, hpro_key, duracion}
            Me.Rows.Add(rowSP_CIMACEX_BUSCA_HUECOSRow)
            Return rowSP_CIMACEX_BUSCA_HUECOSRow
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As SP_CIMACEX_BUSCA_HUECOSDataTable = CType(MyBase.Clone,SP_CIMACEX_BUSCA_HUECOSDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New SP_CIMACEX_BUSCA_HUECOSDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnhora_ini = Me.Columns("hora_ini")
            Me.columnhora_fin = Me.Columns("hora_fin")
            Me.columnbtimetabcode = Me.Columns("btimetabcode")
            Me.columndiardate = Me.Columns("diardate")
            Me.columnok = Me.Columns("ok")
            Me.columndiardate1 = Me.Columns("diardate1")
            Me.columndia_semana = Me.Columns("dia_semana")
            Me.columnagenname = Me.Columns("agenname")
            Me.columnagencode = Me.Columns("agencode")
            Me.columnpers_key = Me.Columns("pers_key")
            Me.columnfirm_key = Me.Columns("firm_key")
            Me.columncovegrou_key = Me.Columns("covegrou_key")
            Me.columnhpro_key = Me.Columns("hpro_key")
            Me.columnduracion = Me.Columns("duracion")
        End Sub
        
        Private Sub InitClass()
            Me.columnhora_ini = New DataColumn("hora_ini", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnhora_ini)
            Me.columnhora_fin = New DataColumn("hora_fin", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnhora_fin)
            Me.columnbtimetabcode = New DataColumn("btimetabcode", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnbtimetabcode)
            Me.columndiardate = New DataColumn("diardate", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columndiardate)
            Me.columnok = New DataColumn("ok", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnok)
            Me.columndiardate1 = New DataColumn("diardate1", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columndiardate1)
            Me.columndia_semana = New DataColumn("dia_semana", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columndia_semana)
            Me.columnagenname = New DataColumn("agenname", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnagenname)
            Me.columnagencode = New DataColumn("agencode", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnagencode)
            Me.columnpers_key = New DataColumn("pers_key", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnpers_key)
            Me.columnfirm_key = New DataColumn("firm_key", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfirm_key)
            Me.columncovegrou_key = New DataColumn("covegrou_key", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncovegrou_key)
            Me.columnhpro_key = New DataColumn("hpro_key", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnhpro_key)
            Me.columnduracion = New DataColumn("duracion", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnduracion)
            Me.columnhora_ini.ReadOnly = true
            Me.columnhora_fin.ReadOnly = true
            Me.columnbtimetabcode.AllowDBNull = false
            Me.columndiardate.ReadOnly = true
            Me.columndiardate1.AllowDBNull = false
            Me.columndia_semana.ReadOnly = true
            Me.columnagenname.AllowDBNull = false
            Me.columnagencode.AllowDBNull = false
        End Sub
        
        Public Function NewSP_CIMACEX_BUSCA_HUECOSRow() As SP_CIMACEX_BUSCA_HUECOSRow
            Return CType(Me.NewRow,SP_CIMACEX_BUSCA_HUECOSRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New SP_CIMACEX_BUSCA_HUECOSRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(SP_CIMACEX_BUSCA_HUECOSRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SP_CIMACEX_BUSCA_HUECOSRowChangedEvent) Is Nothing) Then
                RaiseEvent SP_CIMACEX_BUSCA_HUECOSRowChanged(Me, New SP_CIMACEX_BUSCA_HUECOSRowChangeEvent(CType(e.Row,SP_CIMACEX_BUSCA_HUECOSRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SP_CIMACEX_BUSCA_HUECOSRowChangingEvent) Is Nothing) Then
                RaiseEvent SP_CIMACEX_BUSCA_HUECOSRowChanging(Me, New SP_CIMACEX_BUSCA_HUECOSRowChangeEvent(CType(e.Row,SP_CIMACEX_BUSCA_HUECOSRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SP_CIMACEX_BUSCA_HUECOSRowDeletedEvent) Is Nothing) Then
                RaiseEvent SP_CIMACEX_BUSCA_HUECOSRowDeleted(Me, New SP_CIMACEX_BUSCA_HUECOSRowChangeEvent(CType(e.Row,SP_CIMACEX_BUSCA_HUECOSRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SP_CIMACEX_BUSCA_HUECOSRowDeletingEvent) Is Nothing) Then
                RaiseEvent SP_CIMACEX_BUSCA_HUECOSRowDeleting(Me, New SP_CIMACEX_BUSCA_HUECOSRowChangeEvent(CType(e.Row,SP_CIMACEX_BUSCA_HUECOSRow), e.Action))
            End If
        End Sub
        
        Public Sub RemoveSP_CIMACEX_BUSCA_HUECOSRow(ByVal row As SP_CIMACEX_BUSCA_HUECOSRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class SP_CIMACEX_BUSCA_HUECOSRow
        Inherits DataRow
        
        Private tableSP_CIMACEX_BUSCA_HUECOS As SP_CIMACEX_BUSCA_HUECOSDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tableSP_CIMACEX_BUSCA_HUECOS = CType(Me.Table,SP_CIMACEX_BUSCA_HUECOSDataTable)
        End Sub
        
        Public Property hora_ini As String
            Get
                Try 
                    Return CType(Me(Me.tableSP_CIMACEX_BUSCA_HUECOS.hora_iniColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_CIMACEX_BUSCA_HUECOS.hora_iniColumn) = value
            End Set
        End Property
        
        Public Property hora_fin As String
            Get
                Try 
                    Return CType(Me(Me.tableSP_CIMACEX_BUSCA_HUECOS.hora_finColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_CIMACEX_BUSCA_HUECOS.hora_finColumn) = value
            End Set
        End Property
        
        Public Property btimetabcode As Integer
            Get
                Return CType(Me(Me.tableSP_CIMACEX_BUSCA_HUECOS.btimetabcodeColumn),Integer)
            End Get
            Set
                Me(Me.tableSP_CIMACEX_BUSCA_HUECOS.btimetabcodeColumn) = value
            End Set
        End Property
        
        Public Property diardate As String
            Get
                Try 
                    Return CType(Me(Me.tableSP_CIMACEX_BUSCA_HUECOS.diardateColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_CIMACEX_BUSCA_HUECOS.diardateColumn) = value
            End Set
        End Property
        
        Public Property ok As String
            Get
                Try 
                    Return CType(Me(Me.tableSP_CIMACEX_BUSCA_HUECOS.okColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_CIMACEX_BUSCA_HUECOS.okColumn) = value
            End Set
        End Property
        
        Public Property diardate1 As Date
            Get
                Return CType(Me(Me.tableSP_CIMACEX_BUSCA_HUECOS.diardate1Column),Date)
            End Get
            Set
                Me(Me.tableSP_CIMACEX_BUSCA_HUECOS.diardate1Column) = value
            End Set
        End Property
        
        Public Property dia_semana As String
            Get
                Try 
                    Return CType(Me(Me.tableSP_CIMACEX_BUSCA_HUECOS.dia_semanaColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_CIMACEX_BUSCA_HUECOS.dia_semanaColumn) = value
            End Set
        End Property
        
        Public Property agenname As String
            Get
                Return CType(Me(Me.tableSP_CIMACEX_BUSCA_HUECOS.agennameColumn),String)
            End Get
            Set
                Me(Me.tableSP_CIMACEX_BUSCA_HUECOS.agennameColumn) = value
            End Set
        End Property
        
        Public Property agencode As String
            Get
                Return CType(Me(Me.tableSP_CIMACEX_BUSCA_HUECOS.agencodeColumn),String)
            End Get
            Set
                Me(Me.tableSP_CIMACEX_BUSCA_HUECOS.agencodeColumn) = value
            End Set
        End Property
        
        Public Property pers_key As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSP_CIMACEX_BUSCA_HUECOS.pers_keyColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_CIMACEX_BUSCA_HUECOS.pers_keyColumn) = value
            End Set
        End Property
        
        Public Property firm_key As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSP_CIMACEX_BUSCA_HUECOS.firm_keyColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_CIMACEX_BUSCA_HUECOS.firm_keyColumn) = value
            End Set
        End Property
        
        Public Property covegrou_key As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSP_CIMACEX_BUSCA_HUECOS.covegrou_keyColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_CIMACEX_BUSCA_HUECOS.covegrou_keyColumn) = value
            End Set
        End Property
        
        Public Property hpro_key As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSP_CIMACEX_BUSCA_HUECOS.hpro_keyColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_CIMACEX_BUSCA_HUECOS.hpro_keyColumn) = value
            End Set
        End Property
        
        Public Property duracion As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSP_CIMACEX_BUSCA_HUECOS.duracionColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_CIMACEX_BUSCA_HUECOS.duracionColumn) = value
            End Set
        End Property
        
        Public Function Ishora_iniNull() As Boolean
            Return Me.IsNull(Me.tableSP_CIMACEX_BUSCA_HUECOS.hora_iniColumn)
        End Function
        
        Public Sub Sethora_iniNull()
            Me(Me.tableSP_CIMACEX_BUSCA_HUECOS.hora_iniColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Ishora_finNull() As Boolean
            Return Me.IsNull(Me.tableSP_CIMACEX_BUSCA_HUECOS.hora_finColumn)
        End Function
        
        Public Sub Sethora_finNull()
            Me(Me.tableSP_CIMACEX_BUSCA_HUECOS.hora_finColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsdiardateNull() As Boolean
            Return Me.IsNull(Me.tableSP_CIMACEX_BUSCA_HUECOS.diardateColumn)
        End Function
        
        Public Sub SetdiardateNull()
            Me(Me.tableSP_CIMACEX_BUSCA_HUECOS.diardateColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsokNull() As Boolean
            Return Me.IsNull(Me.tableSP_CIMACEX_BUSCA_HUECOS.okColumn)
        End Function
        
        Public Sub SetokNull()
            Me(Me.tableSP_CIMACEX_BUSCA_HUECOS.okColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isdia_semanaNull() As Boolean
            Return Me.IsNull(Me.tableSP_CIMACEX_BUSCA_HUECOS.dia_semanaColumn)
        End Function
        
        Public Sub Setdia_semanaNull()
            Me(Me.tableSP_CIMACEX_BUSCA_HUECOS.dia_semanaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Ispers_keyNull() As Boolean
            Return Me.IsNull(Me.tableSP_CIMACEX_BUSCA_HUECOS.pers_keyColumn)
        End Function
        
        Public Sub Setpers_keyNull()
            Me(Me.tableSP_CIMACEX_BUSCA_HUECOS.pers_keyColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfirm_keyNull() As Boolean
            Return Me.IsNull(Me.tableSP_CIMACEX_BUSCA_HUECOS.firm_keyColumn)
        End Function
        
        Public Sub Setfirm_keyNull()
            Me(Me.tableSP_CIMACEX_BUSCA_HUECOS.firm_keyColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Iscovegrou_keyNull() As Boolean
            Return Me.IsNull(Me.tableSP_CIMACEX_BUSCA_HUECOS.covegrou_keyColumn)
        End Function
        
        Public Sub Setcovegrou_keyNull()
            Me(Me.tableSP_CIMACEX_BUSCA_HUECOS.covegrou_keyColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Ishpro_keyNull() As Boolean
            Return Me.IsNull(Me.tableSP_CIMACEX_BUSCA_HUECOS.hpro_keyColumn)
        End Function
        
        Public Sub Sethpro_keyNull()
            Me(Me.tableSP_CIMACEX_BUSCA_HUECOS.hpro_keyColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsduracionNull() As Boolean
            Return Me.IsNull(Me.tableSP_CIMACEX_BUSCA_HUECOS.duracionColumn)
        End Function
        
        Public Sub SetduracionNull()
            Me(Me.tableSP_CIMACEX_BUSCA_HUECOS.duracionColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class SP_CIMACEX_BUSCA_HUECOSRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As SP_CIMACEX_BUSCA_HUECOSRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As SP_CIMACEX_BUSCA_HUECOSRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As SP_CIMACEX_BUSCA_HUECOSRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

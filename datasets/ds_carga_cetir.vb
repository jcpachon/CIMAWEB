'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.2407
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.Data
Imports System.Runtime.Serialization
Imports System.Xml


<Serializable(),  _
 System.ComponentModel.DesignerCategoryAttribute("code"),  _
 System.Diagnostics.DebuggerStepThrough(),  _
 System.ComponentModel.ToolboxItem(true)>  _
Public Class ds_carga_cetir
    Inherits DataSet
    
    Private tableSP_CIMACEX_CARGA_CETIR As SP_CIMACEX_CARGA_CETIRDataTable
    
    Public Sub New()
        MyBase.New
        Me.InitClass
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler Me.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    Protected Sub New(ByVal info As SerializationInfo, ByVal context As StreamingContext)
        MyBase.New
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(System.String)),String)
        If (Not (strSchema) Is Nothing) Then
            Dim ds As DataSet = New DataSet
            ds.ReadXmlSchema(New XmlTextReader(New System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("SP_CIMACEX_CARGA_CETIR")) Is Nothing) Then
                Me.Tables.Add(New SP_CIMACEX_CARGA_CETIRDataTable(ds.Tables("SP_CIMACEX_CARGA_CETIR")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.InitClass
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler Me.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SP_CIMACEX_CARGA_CETIR As SP_CIMACEX_CARGA_CETIRDataTable
        Get
            Return Me.tableSP_CIMACEX_CARGA_CETIR
        End Get
    End Property
    
    Public Overrides Function Clone() As DataSet
        Dim cln As ds_carga_cetir = CType(MyBase.Clone,ds_carga_cetir)
        cln.InitVars
        Return cln
    End Function
    
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As XmlReader)
        Me.Reset
        Dim ds As DataSet = New DataSet
        ds.ReadXml(reader)
        If (Not (ds.Tables("SP_CIMACEX_CARGA_CETIR")) Is Nothing) Then
            Me.Tables.Add(New SP_CIMACEX_CARGA_CETIRDataTable(ds.Tables("SP_CIMACEX_CARGA_CETIR")))
        End If
        Me.DataSetName = ds.DataSetName
        Me.Prefix = ds.Prefix
        Me.Namespace = ds.Namespace
        Me.Locale = ds.Locale
        Me.CaseSensitive = ds.CaseSensitive
        Me.EnforceConstraints = ds.EnforceConstraints
        Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
        Me.InitVars
    End Sub
    
    Protected Overrides Function GetSchemaSerializable() As System.Xml.Schema.XmlSchema
        Dim stream As System.IO.MemoryStream = New System.IO.MemoryStream
        Me.WriteXmlSchema(New XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return System.Xml.Schema.XmlSchema.Read(New XmlTextReader(stream), Nothing)
    End Function
    
    Friend Sub InitVars()
        Me.tableSP_CIMACEX_CARGA_CETIR = CType(Me.Tables("SP_CIMACEX_CARGA_CETIR"),SP_CIMACEX_CARGA_CETIRDataTable)
        If (Not (Me.tableSP_CIMACEX_CARGA_CETIR) Is Nothing) Then
            Me.tableSP_CIMACEX_CARGA_CETIR.InitVars
        End If
    End Sub
    
    Private Sub InitClass()
        Me.DataSetName = "ds_carga_cetir"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/ds_carga_cetir.xsd"
        Me.Locale = New System.Globalization.CultureInfo("en-US")
        Me.CaseSensitive = false
        Me.EnforceConstraints = true
        Me.tableSP_CIMACEX_CARGA_CETIR = New SP_CIMACEX_CARGA_CETIRDataTable
        Me.Tables.Add(Me.tableSP_CIMACEX_CARGA_CETIR)
    End Sub
    
    Private Function ShouldSerializeSP_CIMACEX_CARGA_CETIR() As Boolean
        Return false
    End Function
    
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    Public Delegate Sub SP_CIMACEX_CARGA_CETIRRowChangeEventHandler(ByVal sender As Object, ByVal e As SP_CIMACEX_CARGA_CETIRRowChangeEvent)
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class SP_CIMACEX_CARGA_CETIRDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnhora_ini As DataColumn
        
        Private columnhora_fin As DataColumn
        
        Private columndiardate As DataColumn
        
        Private columnpers_key As DataColumn
        
        Private columnpersname As DataColumn
        
        Private columnperssur1 As DataColumn
        
        Private columnperssur2 As DataColumn
        
        Private columnfecha_nacimiento As DataColumn
        
        Private columndni As DataColumn
        
        Private columntsexcode As DataColumn
        
        Private columnpoblacion As DataColumn
        
        Private columnprovincia As DataColumn
        
        Private columnpais As DataColumn
        
        Private columncp As DataColumn
        
        Private columndireccion As DataColumn
        
        Private columnemail As DataColumn
        
        Private columnepiscode As DataColumn
        
        Private columntel1 As DataColumn
        
        Private columntel2 As DataColumn
        
        Private columnID_Prova As DataColumn
        
        Private columngarante As DataColumn
        
        Friend Sub New()
            MyBase.New("SP_CIMACEX_CARGA_CETIR")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property hora_iniColumn As DataColumn
            Get
                Return Me.columnhora_ini
            End Get
        End Property
        
        Friend ReadOnly Property hora_finColumn As DataColumn
            Get
                Return Me.columnhora_fin
            End Get
        End Property
        
        Friend ReadOnly Property diardateColumn As DataColumn
            Get
                Return Me.columndiardate
            End Get
        End Property
        
        Friend ReadOnly Property pers_keyColumn As DataColumn
            Get
                Return Me.columnpers_key
            End Get
        End Property
        
        Friend ReadOnly Property persnameColumn As DataColumn
            Get
                Return Me.columnpersname
            End Get
        End Property
        
        Friend ReadOnly Property perssur1Column As DataColumn
            Get
                Return Me.columnperssur1
            End Get
        End Property
        
        Friend ReadOnly Property perssur2Column As DataColumn
            Get
                Return Me.columnperssur2
            End Get
        End Property
        
        Friend ReadOnly Property fecha_nacimientoColumn As DataColumn
            Get
                Return Me.columnfecha_nacimiento
            End Get
        End Property
        
        Friend ReadOnly Property dniColumn As DataColumn
            Get
                Return Me.columndni
            End Get
        End Property
        
        Friend ReadOnly Property tsexcodeColumn As DataColumn
            Get
                Return Me.columntsexcode
            End Get
        End Property
        
        Friend ReadOnly Property poblacionColumn As DataColumn
            Get
                Return Me.columnpoblacion
            End Get
        End Property
        
        Friend ReadOnly Property provinciaColumn As DataColumn
            Get
                Return Me.columnprovincia
            End Get
        End Property
        
        Friend ReadOnly Property paisColumn As DataColumn
            Get
                Return Me.columnpais
            End Get
        End Property
        
        Friend ReadOnly Property cpColumn As DataColumn
            Get
                Return Me.columncp
            End Get
        End Property
        
        Friend ReadOnly Property direccionColumn As DataColumn
            Get
                Return Me.columndireccion
            End Get
        End Property
        
        Friend ReadOnly Property emailColumn As DataColumn
            Get
                Return Me.columnemail
            End Get
        End Property
        
        Friend ReadOnly Property episcodeColumn As DataColumn
            Get
                Return Me.columnepiscode
            End Get
        End Property
        
        Friend ReadOnly Property tel1Column As DataColumn
            Get
                Return Me.columntel1
            End Get
        End Property
        
        Friend ReadOnly Property tel2Column As DataColumn
            Get
                Return Me.columntel2
            End Get
        End Property
        
        Friend ReadOnly Property ID_ProvaColumn As DataColumn
            Get
                Return Me.columnID_Prova
            End Get
        End Property
        
        Friend ReadOnly Property garanteColumn As DataColumn
            Get
                Return Me.columngarante
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As SP_CIMACEX_CARGA_CETIRRow
            Get
                Return CType(Me.Rows(index),SP_CIMACEX_CARGA_CETIRRow)
            End Get
        End Property
        
        Public Event SP_CIMACEX_CARGA_CETIRRowChanged As SP_CIMACEX_CARGA_CETIRRowChangeEventHandler
        
        Public Event SP_CIMACEX_CARGA_CETIRRowChanging As SP_CIMACEX_CARGA_CETIRRowChangeEventHandler
        
        Public Event SP_CIMACEX_CARGA_CETIRRowDeleted As SP_CIMACEX_CARGA_CETIRRowChangeEventHandler
        
        Public Event SP_CIMACEX_CARGA_CETIRRowDeleting As SP_CIMACEX_CARGA_CETIRRowChangeEventHandler
        
        Public Overloads Sub AddSP_CIMACEX_CARGA_CETIRRow(ByVal row As SP_CIMACEX_CARGA_CETIRRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function AddSP_CIMACEX_CARGA_CETIRRow( _
                    ByVal hora_ini As Date,  _
                    ByVal hora_fin As Date,  _
                    ByVal diardate As Date,  _
                    ByVal pers_key As Integer,  _
                    ByVal persname As String,  _
                    ByVal perssur1 As String,  _
                    ByVal perssur2 As String,  _
                    ByVal fecha_nacimiento As Date,  _
                    ByVal dni As String,  _
                    ByVal tsexcode As String,  _
                    ByVal poblacion As String,  _
                    ByVal provincia As String,  _
                    ByVal pais As String,  _
                    ByVal cp As String,  _
                    ByVal direccion As String,  _
                    ByVal email As String,  _
                    ByVal episcode As String,  _
                    ByVal tel1 As String,  _
                    ByVal tel2 As String,  _
                    ByVal ID_Prova As String,  _
                    ByVal garante As String) As SP_CIMACEX_CARGA_CETIRRow
            Dim rowSP_CIMACEX_CARGA_CETIRRow As SP_CIMACEX_CARGA_CETIRRow = CType(Me.NewRow,SP_CIMACEX_CARGA_CETIRRow)
            rowSP_CIMACEX_CARGA_CETIRRow.ItemArray = New Object() {hora_ini, hora_fin, diardate, pers_key, persname, perssur1, perssur2, fecha_nacimiento, dni, tsexcode, poblacion, provincia, pais, cp, direccion, email, episcode, tel1, tel2, ID_Prova, garante}
            Me.Rows.Add(rowSP_CIMACEX_CARGA_CETIRRow)
            Return rowSP_CIMACEX_CARGA_CETIRRow
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As SP_CIMACEX_CARGA_CETIRDataTable = CType(MyBase.Clone,SP_CIMACEX_CARGA_CETIRDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New SP_CIMACEX_CARGA_CETIRDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnhora_ini = Me.Columns("hora_ini")
            Me.columnhora_fin = Me.Columns("hora_fin")
            Me.columndiardate = Me.Columns("diardate")
            Me.columnpers_key = Me.Columns("pers_key")
            Me.columnpersname = Me.Columns("persname")
            Me.columnperssur1 = Me.Columns("perssur1")
            Me.columnperssur2 = Me.Columns("perssur2")
            Me.columnfecha_nacimiento = Me.Columns("fecha_nacimiento")
            Me.columndni = Me.Columns("dni")
            Me.columntsexcode = Me.Columns("tsexcode")
            Me.columnpoblacion = Me.Columns("poblacion")
            Me.columnprovincia = Me.Columns("provincia")
            Me.columnpais = Me.Columns("pais")
            Me.columncp = Me.Columns("cp")
            Me.columndireccion = Me.Columns("direccion")
            Me.columnemail = Me.Columns("email")
            Me.columnepiscode = Me.Columns("episcode")
            Me.columntel1 = Me.Columns("tel1")
            Me.columntel2 = Me.Columns("tel2")
            Me.columnID_Prova = Me.Columns("ID_Prova")
            Me.columngarante = Me.Columns("garante")
        End Sub
        
        Private Sub InitClass()
            Me.columnhora_ini = New DataColumn("hora_ini", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnhora_ini)
            Me.columnhora_fin = New DataColumn("hora_fin", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnhora_fin)
            Me.columndiardate = New DataColumn("diardate", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columndiardate)
            Me.columnpers_key = New DataColumn("pers_key", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnpers_key)
            Me.columnpersname = New DataColumn("persname", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnpersname)
            Me.columnperssur1 = New DataColumn("perssur1", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnperssur1)
            Me.columnperssur2 = New DataColumn("perssur2", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnperssur2)
            Me.columnfecha_nacimiento = New DataColumn("fecha_nacimiento", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfecha_nacimiento)
            Me.columndni = New DataColumn("dni", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columndni)
            Me.columntsexcode = New DataColumn("tsexcode", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columntsexcode)
            Me.columnpoblacion = New DataColumn("poblacion", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnpoblacion)
            Me.columnprovincia = New DataColumn("provincia", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnprovincia)
            Me.columnpais = New DataColumn("pais", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnpais)
            Me.columncp = New DataColumn("cp", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncp)
            Me.columndireccion = New DataColumn("direccion", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columndireccion)
            Me.columnemail = New DataColumn("email", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnemail)
            Me.columnepiscode = New DataColumn("episcode", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnepiscode)
            Me.columntel1 = New DataColumn("tel1", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columntel1)
            Me.columntel2 = New DataColumn("tel2", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columntel2)
            Me.columnID_Prova = New DataColumn("ID_Prova", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnID_Prova)
            Me.columngarante = New DataColumn("garante", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columngarante)
            Me.columnhora_ini.AllowDBNull = false
            Me.columnhora_fin.AllowDBNull = false
            Me.columndiardate.AllowDBNull = false
            Me.columnpers_key.AllowDBNull = false
            Me.columnpersname.ReadOnly = true
            Me.columnperssur1.ReadOnly = true
            Me.columnperssur2.ReadOnly = true
            Me.columnfecha_nacimiento.AllowDBNull = false
            Me.columndni.ReadOnly = true
            Me.columntsexcode.AllowDBNull = false
            Me.columnpoblacion.ReadOnly = true
            Me.columnprovincia.ReadOnly = true
            Me.columnpais.ReadOnly = true
            Me.columncp.ReadOnly = true
            Me.columndireccion.ReadOnly = true
            Me.columnemail.ReadOnly = true
            Me.columnepiscode.AllowDBNull = false
            Me.columntel1.ReadOnly = true
            Me.columntel2.ReadOnly = true
        End Sub
        
        Public Function NewSP_CIMACEX_CARGA_CETIRRow() As SP_CIMACEX_CARGA_CETIRRow
            Return CType(Me.NewRow,SP_CIMACEX_CARGA_CETIRRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New SP_CIMACEX_CARGA_CETIRRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(SP_CIMACEX_CARGA_CETIRRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SP_CIMACEX_CARGA_CETIRRowChangedEvent) Is Nothing) Then
                RaiseEvent SP_CIMACEX_CARGA_CETIRRowChanged(Me, New SP_CIMACEX_CARGA_CETIRRowChangeEvent(CType(e.Row,SP_CIMACEX_CARGA_CETIRRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SP_CIMACEX_CARGA_CETIRRowChangingEvent) Is Nothing) Then
                RaiseEvent SP_CIMACEX_CARGA_CETIRRowChanging(Me, New SP_CIMACEX_CARGA_CETIRRowChangeEvent(CType(e.Row,SP_CIMACEX_CARGA_CETIRRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SP_CIMACEX_CARGA_CETIRRowDeletedEvent) Is Nothing) Then
                RaiseEvent SP_CIMACEX_CARGA_CETIRRowDeleted(Me, New SP_CIMACEX_CARGA_CETIRRowChangeEvent(CType(e.Row,SP_CIMACEX_CARGA_CETIRRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SP_CIMACEX_CARGA_CETIRRowDeletingEvent) Is Nothing) Then
                RaiseEvent SP_CIMACEX_CARGA_CETIRRowDeleting(Me, New SP_CIMACEX_CARGA_CETIRRowChangeEvent(CType(e.Row,SP_CIMACEX_CARGA_CETIRRow), e.Action))
            End If
        End Sub
        
        Public Sub RemoveSP_CIMACEX_CARGA_CETIRRow(ByVal row As SP_CIMACEX_CARGA_CETIRRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class SP_CIMACEX_CARGA_CETIRRow
        Inherits DataRow
        
        Private tableSP_CIMACEX_CARGA_CETIR As SP_CIMACEX_CARGA_CETIRDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tableSP_CIMACEX_CARGA_CETIR = CType(Me.Table,SP_CIMACEX_CARGA_CETIRDataTable)
        End Sub
        
        Public Property hora_ini As Date
            Get
                Return CType(Me(Me.tableSP_CIMACEX_CARGA_CETIR.hora_iniColumn),Date)
            End Get
            Set
                Me(Me.tableSP_CIMACEX_CARGA_CETIR.hora_iniColumn) = value
            End Set
        End Property
        
        Public Property hora_fin As Date
            Get
                Return CType(Me(Me.tableSP_CIMACEX_CARGA_CETIR.hora_finColumn),Date)
            End Get
            Set
                Me(Me.tableSP_CIMACEX_CARGA_CETIR.hora_finColumn) = value
            End Set
        End Property
        
        Public Property diardate As Date
            Get
                Return CType(Me(Me.tableSP_CIMACEX_CARGA_CETIR.diardateColumn),Date)
            End Get
            Set
                Me(Me.tableSP_CIMACEX_CARGA_CETIR.diardateColumn) = value
            End Set
        End Property
        
        Public Property pers_key As Integer
            Get
                Return CType(Me(Me.tableSP_CIMACEX_CARGA_CETIR.pers_keyColumn),Integer)
            End Get
            Set
                Me(Me.tableSP_CIMACEX_CARGA_CETIR.pers_keyColumn) = value
            End Set
        End Property
        
        Public Property persname As String
            Get
                Try 
                    Return CType(Me(Me.tableSP_CIMACEX_CARGA_CETIR.persnameColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_CIMACEX_CARGA_CETIR.persnameColumn) = value
            End Set
        End Property
        
        Public Property perssur1 As String
            Get
                Try 
                    Return CType(Me(Me.tableSP_CIMACEX_CARGA_CETIR.perssur1Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_CIMACEX_CARGA_CETIR.perssur1Column) = value
            End Set
        End Property
        
        Public Property perssur2 As String
            Get
                Try 
                    Return CType(Me(Me.tableSP_CIMACEX_CARGA_CETIR.perssur2Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_CIMACEX_CARGA_CETIR.perssur2Column) = value
            End Set
        End Property
        
        Public Property fecha_nacimiento As Date
            Get
                Return CType(Me(Me.tableSP_CIMACEX_CARGA_CETIR.fecha_nacimientoColumn),Date)
            End Get
            Set
                Me(Me.tableSP_CIMACEX_CARGA_CETIR.fecha_nacimientoColumn) = value
            End Set
        End Property
        
        Public Property dni As String
            Get
                Try 
                    Return CType(Me(Me.tableSP_CIMACEX_CARGA_CETIR.dniColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_CIMACEX_CARGA_CETIR.dniColumn) = value
            End Set
        End Property
        
        Public Property tsexcode As String
            Get
                Return CType(Me(Me.tableSP_CIMACEX_CARGA_CETIR.tsexcodeColumn),String)
            End Get
            Set
                Me(Me.tableSP_CIMACEX_CARGA_CETIR.tsexcodeColumn) = value
            End Set
        End Property
        
        Public Property poblacion As String
            Get
                Try 
                    Return CType(Me(Me.tableSP_CIMACEX_CARGA_CETIR.poblacionColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_CIMACEX_CARGA_CETIR.poblacionColumn) = value
            End Set
        End Property
        
        Public Property provincia As String
            Get
                Try 
                    Return CType(Me(Me.tableSP_CIMACEX_CARGA_CETIR.provinciaColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_CIMACEX_CARGA_CETIR.provinciaColumn) = value
            End Set
        End Property
        
        Public Property pais As String
            Get
                Try 
                    Return CType(Me(Me.tableSP_CIMACEX_CARGA_CETIR.paisColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_CIMACEX_CARGA_CETIR.paisColumn) = value
            End Set
        End Property
        
        Public Property cp As String
            Get
                Try 
                    Return CType(Me(Me.tableSP_CIMACEX_CARGA_CETIR.cpColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_CIMACEX_CARGA_CETIR.cpColumn) = value
            End Set
        End Property
        
        Public Property direccion As String
            Get
                Try 
                    Return CType(Me(Me.tableSP_CIMACEX_CARGA_CETIR.direccionColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_CIMACEX_CARGA_CETIR.direccionColumn) = value
            End Set
        End Property
        
        Public Property email As String
            Get
                Try 
                    Return CType(Me(Me.tableSP_CIMACEX_CARGA_CETIR.emailColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_CIMACEX_CARGA_CETIR.emailColumn) = value
            End Set
        End Property
        
        Public Property episcode As String
            Get
                Return CType(Me(Me.tableSP_CIMACEX_CARGA_CETIR.episcodeColumn),String)
            End Get
            Set
                Me(Me.tableSP_CIMACEX_CARGA_CETIR.episcodeColumn) = value
            End Set
        End Property
        
        Public Property tel1 As String
            Get
                Try 
                    Return CType(Me(Me.tableSP_CIMACEX_CARGA_CETIR.tel1Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_CIMACEX_CARGA_CETIR.tel1Column) = value
            End Set
        End Property
        
        Public Property tel2 As String
            Get
                Try 
                    Return CType(Me(Me.tableSP_CIMACEX_CARGA_CETIR.tel2Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_CIMACEX_CARGA_CETIR.tel2Column) = value
            End Set
        End Property
        
        Public Property ID_Prova As String
            Get
                Try 
                    Return CType(Me(Me.tableSP_CIMACEX_CARGA_CETIR.ID_ProvaColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_CIMACEX_CARGA_CETIR.ID_ProvaColumn) = value
            End Set
        End Property
        
        Public Property garante As String
            Get
                Try 
                    Return CType(Me(Me.tableSP_CIMACEX_CARGA_CETIR.garanteColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_CIMACEX_CARGA_CETIR.garanteColumn) = value
            End Set
        End Property
        
        Public Function IspersnameNull() As Boolean
            Return Me.IsNull(Me.tableSP_CIMACEX_CARGA_CETIR.persnameColumn)
        End Function
        
        Public Sub SetpersnameNull()
            Me(Me.tableSP_CIMACEX_CARGA_CETIR.persnameColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isperssur1Null() As Boolean
            Return Me.IsNull(Me.tableSP_CIMACEX_CARGA_CETIR.perssur1Column)
        End Function
        
        Public Sub Setperssur1Null()
            Me(Me.tableSP_CIMACEX_CARGA_CETIR.perssur1Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isperssur2Null() As Boolean
            Return Me.IsNull(Me.tableSP_CIMACEX_CARGA_CETIR.perssur2Column)
        End Function
        
        Public Sub Setperssur2Null()
            Me(Me.tableSP_CIMACEX_CARGA_CETIR.perssur2Column) = System.Convert.DBNull
        End Sub
        
        Public Function IsdniNull() As Boolean
            Return Me.IsNull(Me.tableSP_CIMACEX_CARGA_CETIR.dniColumn)
        End Function
        
        Public Sub SetdniNull()
            Me(Me.tableSP_CIMACEX_CARGA_CETIR.dniColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IspoblacionNull() As Boolean
            Return Me.IsNull(Me.tableSP_CIMACEX_CARGA_CETIR.poblacionColumn)
        End Function
        
        Public Sub SetpoblacionNull()
            Me(Me.tableSP_CIMACEX_CARGA_CETIR.poblacionColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsprovinciaNull() As Boolean
            Return Me.IsNull(Me.tableSP_CIMACEX_CARGA_CETIR.provinciaColumn)
        End Function
        
        Public Sub SetprovinciaNull()
            Me(Me.tableSP_CIMACEX_CARGA_CETIR.provinciaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IspaisNull() As Boolean
            Return Me.IsNull(Me.tableSP_CIMACEX_CARGA_CETIR.paisColumn)
        End Function
        
        Public Sub SetpaisNull()
            Me(Me.tableSP_CIMACEX_CARGA_CETIR.paisColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IscpNull() As Boolean
            Return Me.IsNull(Me.tableSP_CIMACEX_CARGA_CETIR.cpColumn)
        End Function
        
        Public Sub SetcpNull()
            Me(Me.tableSP_CIMACEX_CARGA_CETIR.cpColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsdireccionNull() As Boolean
            Return Me.IsNull(Me.tableSP_CIMACEX_CARGA_CETIR.direccionColumn)
        End Function
        
        Public Sub SetdireccionNull()
            Me(Me.tableSP_CIMACEX_CARGA_CETIR.direccionColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsemailNull() As Boolean
            Return Me.IsNull(Me.tableSP_CIMACEX_CARGA_CETIR.emailColumn)
        End Function
        
        Public Sub SetemailNull()
            Me(Me.tableSP_CIMACEX_CARGA_CETIR.emailColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Istel1Null() As Boolean
            Return Me.IsNull(Me.tableSP_CIMACEX_CARGA_CETIR.tel1Column)
        End Function
        
        Public Sub Settel1Null()
            Me(Me.tableSP_CIMACEX_CARGA_CETIR.tel1Column) = System.Convert.DBNull
        End Sub
        
        Public Function Istel2Null() As Boolean
            Return Me.IsNull(Me.tableSP_CIMACEX_CARGA_CETIR.tel2Column)
        End Function
        
        Public Sub Settel2Null()
            Me(Me.tableSP_CIMACEX_CARGA_CETIR.tel2Column) = System.Convert.DBNull
        End Sub
        
        Public Function IsID_ProvaNull() As Boolean
            Return Me.IsNull(Me.tableSP_CIMACEX_CARGA_CETIR.ID_ProvaColumn)
        End Function
        
        Public Sub SetID_ProvaNull()
            Me(Me.tableSP_CIMACEX_CARGA_CETIR.ID_ProvaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsgaranteNull() As Boolean
            Return Me.IsNull(Me.tableSP_CIMACEX_CARGA_CETIR.garanteColumn)
        End Function
        
        Public Sub SetgaranteNull()
            Me(Me.tableSP_CIMACEX_CARGA_CETIR.garanteColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class SP_CIMACEX_CARGA_CETIRRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As SP_CIMACEX_CARGA_CETIRRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As SP_CIMACEX_CARGA_CETIRRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As SP_CIMACEX_CARGA_CETIRRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

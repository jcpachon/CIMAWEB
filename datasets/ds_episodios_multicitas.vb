'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.2407
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.Data
Imports System.Runtime.Serialization
Imports System.Xml


<Serializable(),  _
 System.ComponentModel.DesignerCategoryAttribute("code"),  _
 System.Diagnostics.DebuggerStepThrough(),  _
 System.ComponentModel.ToolboxItem(true)>  _
Public Class ds_episodios_multicitas
    Inherits DataSet
    
    Private tableSP_CIMACEX_EPISODIOS_MULTICITAS As SP_CIMACEX_EPISODIOS_MULTICITASDataTable
    
    Public Sub New()
        MyBase.New
        Me.InitClass
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler Me.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    Protected Sub New(ByVal info As SerializationInfo, ByVal context As StreamingContext)
        MyBase.New
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(System.String)),String)
        If (Not (strSchema) Is Nothing) Then
            Dim ds As DataSet = New DataSet
            ds.ReadXmlSchema(New XmlTextReader(New System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("SP_CIMACEX_EPISODIOS_MULTICITAS")) Is Nothing) Then
                Me.Tables.Add(New SP_CIMACEX_EPISODIOS_MULTICITASDataTable(ds.Tables("SP_CIMACEX_EPISODIOS_MULTICITAS")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.InitClass
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler Me.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SP_CIMACEX_EPISODIOS_MULTICITAS As SP_CIMACEX_EPISODIOS_MULTICITASDataTable
        Get
            Return Me.tableSP_CIMACEX_EPISODIOS_MULTICITAS
        End Get
    End Property
    
    Public Overrides Function Clone() As DataSet
        Dim cln As ds_episodios_multicitas = CType(MyBase.Clone,ds_episodios_multicitas)
        cln.InitVars
        Return cln
    End Function
    
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As XmlReader)
        Me.Reset
        Dim ds As DataSet = New DataSet
        ds.ReadXml(reader)
        If (Not (ds.Tables("SP_CIMACEX_EPISODIOS_MULTICITAS")) Is Nothing) Then
            Me.Tables.Add(New SP_CIMACEX_EPISODIOS_MULTICITASDataTable(ds.Tables("SP_CIMACEX_EPISODIOS_MULTICITAS")))
        End If
        Me.DataSetName = ds.DataSetName
        Me.Prefix = ds.Prefix
        Me.Namespace = ds.Namespace
        Me.Locale = ds.Locale
        Me.CaseSensitive = ds.CaseSensitive
        Me.EnforceConstraints = ds.EnforceConstraints
        Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
        Me.InitVars
    End Sub
    
    Protected Overrides Function GetSchemaSerializable() As System.Xml.Schema.XmlSchema
        Dim stream As System.IO.MemoryStream = New System.IO.MemoryStream
        Me.WriteXmlSchema(New XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return System.Xml.Schema.XmlSchema.Read(New XmlTextReader(stream), Nothing)
    End Function
    
    Friend Sub InitVars()
        Me.tableSP_CIMACEX_EPISODIOS_MULTICITAS = CType(Me.Tables("SP_CIMACEX_EPISODIOS_MULTICITAS"),SP_CIMACEX_EPISODIOS_MULTICITASDataTable)
        If (Not (Me.tableSP_CIMACEX_EPISODIOS_MULTICITAS) Is Nothing) Then
            Me.tableSP_CIMACEX_EPISODIOS_MULTICITAS.InitVars
        End If
    End Sub
    
    Private Sub InitClass()
        Me.DataSetName = "ds_episodios_multicitas"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/ds_episodios_multicitas.xsd"
        Me.Locale = New System.Globalization.CultureInfo("en-US")
        Me.CaseSensitive = false
        Me.EnforceConstraints = true
        Me.tableSP_CIMACEX_EPISODIOS_MULTICITAS = New SP_CIMACEX_EPISODIOS_MULTICITASDataTable
        Me.Tables.Add(Me.tableSP_CIMACEX_EPISODIOS_MULTICITAS)
    End Sub
    
    Private Function ShouldSerializeSP_CIMACEX_EPISODIOS_MULTICITAS() As Boolean
        Return false
    End Function
    
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    Public Delegate Sub SP_CIMACEX_EPISODIOS_MULTICITASRowChangeEventHandler(ByVal sender As Object, ByVal e As SP_CIMACEX_EPISODIOS_MULTICITASRowChangeEvent)
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class SP_CIMACEX_EPISODIOS_MULTICITASDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnepis_key As DataColumn
        
        Private columnepiscode As DataColumn
        
        Private columnclip_key As DataColumn
        
        Private columntactdesc As DataColumn
        
        Private columnpers_key As DataColumn
        
        Private columnpati_hfn As DataColumn
        
        Private columncstadesclong As DataColumn
        
        Private columnperssur1 As DataColumn
        
        Private columnperssur2 As DataColumn
        
        Private columnpersname As DataColumn
        
        Private columnepisdatecrea As DataColumn
        
        Private columnepiscstadateinit As DataColumn
        
        Private columnepiscstadate_end As DataColumn
        
        Private columnepisopen As DataColumn
        
        Private columnhprodesclong As DataColumn
        
        Friend Sub New()
            MyBase.New("SP_CIMACEX_EPISODIOS_MULTICITAS")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property epis_keyColumn As DataColumn
            Get
                Return Me.columnepis_key
            End Get
        End Property
        
        Friend ReadOnly Property episcodeColumn As DataColumn
            Get
                Return Me.columnepiscode
            End Get
        End Property
        
        Friend ReadOnly Property clip_keyColumn As DataColumn
            Get
                Return Me.columnclip_key
            End Get
        End Property
        
        Friend ReadOnly Property tactdescColumn As DataColumn
            Get
                Return Me.columntactdesc
            End Get
        End Property
        
        Friend ReadOnly Property pers_keyColumn As DataColumn
            Get
                Return Me.columnpers_key
            End Get
        End Property
        
        Friend ReadOnly Property pati_hfnColumn As DataColumn
            Get
                Return Me.columnpati_hfn
            End Get
        End Property
        
        Friend ReadOnly Property cstadesclongColumn As DataColumn
            Get
                Return Me.columncstadesclong
            End Get
        End Property
        
        Friend ReadOnly Property perssur1Column As DataColumn
            Get
                Return Me.columnperssur1
            End Get
        End Property
        
        Friend ReadOnly Property perssur2Column As DataColumn
            Get
                Return Me.columnperssur2
            End Get
        End Property
        
        Friend ReadOnly Property persnameColumn As DataColumn
            Get
                Return Me.columnpersname
            End Get
        End Property
        
        Friend ReadOnly Property episdatecreaColumn As DataColumn
            Get
                Return Me.columnepisdatecrea
            End Get
        End Property
        
        Friend ReadOnly Property episcstadateinitColumn As DataColumn
            Get
                Return Me.columnepiscstadateinit
            End Get
        End Property
        
        Friend ReadOnly Property episcstadate_endColumn As DataColumn
            Get
                Return Me.columnepiscstadate_end
            End Get
        End Property
        
        Friend ReadOnly Property episopenColumn As DataColumn
            Get
                Return Me.columnepisopen
            End Get
        End Property
        
        Friend ReadOnly Property hprodesclongColumn As DataColumn
            Get
                Return Me.columnhprodesclong
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As SP_CIMACEX_EPISODIOS_MULTICITASRow
            Get
                Return CType(Me.Rows(index),SP_CIMACEX_EPISODIOS_MULTICITASRow)
            End Get
        End Property
        
        Public Event SP_CIMACEX_EPISODIOS_MULTICITASRowChanged As SP_CIMACEX_EPISODIOS_MULTICITASRowChangeEventHandler
        
        Public Event SP_CIMACEX_EPISODIOS_MULTICITASRowChanging As SP_CIMACEX_EPISODIOS_MULTICITASRowChangeEventHandler
        
        Public Event SP_CIMACEX_EPISODIOS_MULTICITASRowDeleted As SP_CIMACEX_EPISODIOS_MULTICITASRowChangeEventHandler
        
        Public Event SP_CIMACEX_EPISODIOS_MULTICITASRowDeleting As SP_CIMACEX_EPISODIOS_MULTICITASRowChangeEventHandler
        
        Public Overloads Sub AddSP_CIMACEX_EPISODIOS_MULTICITASRow(ByVal row As SP_CIMACEX_EPISODIOS_MULTICITASRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function AddSP_CIMACEX_EPISODIOS_MULTICITASRow(ByVal epis_key As Integer, ByVal episcode As String, ByVal clip_key As Integer, ByVal tactdesc As String, ByVal pers_key As Integer, ByVal pati_hfn As Integer, ByVal cstadesclong As String, ByVal perssur1 As String, ByVal perssur2 As String, ByVal persname As String, ByVal episdatecrea As String, ByVal episcstadateinit As String, ByVal episcstadate_end As String, ByVal episopen As String, ByVal hprodesclong As String) As SP_CIMACEX_EPISODIOS_MULTICITASRow
            Dim rowSP_CIMACEX_EPISODIOS_MULTICITASRow As SP_CIMACEX_EPISODIOS_MULTICITASRow = CType(Me.NewRow,SP_CIMACEX_EPISODIOS_MULTICITASRow)
            rowSP_CIMACEX_EPISODIOS_MULTICITASRow.ItemArray = New Object() {epis_key, episcode, clip_key, tactdesc, pers_key, pati_hfn, cstadesclong, perssur1, perssur2, persname, episdatecrea, episcstadateinit, episcstadate_end, episopen, hprodesclong}
            Me.Rows.Add(rowSP_CIMACEX_EPISODIOS_MULTICITASRow)
            Return rowSP_CIMACEX_EPISODIOS_MULTICITASRow
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As SP_CIMACEX_EPISODIOS_MULTICITASDataTable = CType(MyBase.Clone,SP_CIMACEX_EPISODIOS_MULTICITASDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New SP_CIMACEX_EPISODIOS_MULTICITASDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnepis_key = Me.Columns("epis_key")
            Me.columnepiscode = Me.Columns("episcode")
            Me.columnclip_key = Me.Columns("clip_key")
            Me.columntactdesc = Me.Columns("tactdesc")
            Me.columnpers_key = Me.Columns("pers_key")
            Me.columnpati_hfn = Me.Columns("pati_hfn")
            Me.columncstadesclong = Me.Columns("cstadesclong")
            Me.columnperssur1 = Me.Columns("perssur1")
            Me.columnperssur2 = Me.Columns("perssur2")
            Me.columnpersname = Me.Columns("persname")
            Me.columnepisdatecrea = Me.Columns("episdatecrea")
            Me.columnepiscstadateinit = Me.Columns("episcstadateinit")
            Me.columnepiscstadate_end = Me.Columns("episcstadate_end")
            Me.columnepisopen = Me.Columns("episopen")
            Me.columnhprodesclong = Me.Columns("hprodesclong")
        End Sub
        
        Private Sub InitClass()
            Me.columnepis_key = New DataColumn("epis_key", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnepis_key)
            Me.columnepiscode = New DataColumn("episcode", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnepiscode)
            Me.columnclip_key = New DataColumn("clip_key", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnclip_key)
            Me.columntactdesc = New DataColumn("tactdesc", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columntactdesc)
            Me.columnpers_key = New DataColumn("pers_key", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnpers_key)
            Me.columnpati_hfn = New DataColumn("pati_hfn", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnpati_hfn)
            Me.columncstadesclong = New DataColumn("cstadesclong", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncstadesclong)
            Me.columnperssur1 = New DataColumn("perssur1", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnperssur1)
            Me.columnperssur2 = New DataColumn("perssur2", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnperssur2)
            Me.columnpersname = New DataColumn("persname", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnpersname)
            Me.columnepisdatecrea = New DataColumn("episdatecrea", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnepisdatecrea)
            Me.columnepiscstadateinit = New DataColumn("episcstadateinit", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnepiscstadateinit)
            Me.columnepiscstadate_end = New DataColumn("episcstadate_end", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnepiscstadate_end)
            Me.columnepisopen = New DataColumn("episopen", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnepisopen)
            Me.columnhprodesclong = New DataColumn("hprodesclong", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnhprodesclong)
            Me.columnepis_key.AllowDBNull = false
            Me.columnepiscode.AllowDBNull = false
            Me.columnclip_key.AllowDBNull = false
            Me.columntactdesc.AllowDBNull = false
            Me.columnpers_key.AllowDBNull = false
            Me.columnepisdatecrea.ReadOnly = true
            Me.columnepiscstadateinit.ReadOnly = true
            Me.columnepiscstadate_end.ReadOnly = true
            Me.columnepisopen.AllowDBNull = false
        End Sub
        
        Public Function NewSP_CIMACEX_EPISODIOS_MULTICITASRow() As SP_CIMACEX_EPISODIOS_MULTICITASRow
            Return CType(Me.NewRow,SP_CIMACEX_EPISODIOS_MULTICITASRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New SP_CIMACEX_EPISODIOS_MULTICITASRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(SP_CIMACEX_EPISODIOS_MULTICITASRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SP_CIMACEX_EPISODIOS_MULTICITASRowChangedEvent) Is Nothing) Then
                RaiseEvent SP_CIMACEX_EPISODIOS_MULTICITASRowChanged(Me, New SP_CIMACEX_EPISODIOS_MULTICITASRowChangeEvent(CType(e.Row,SP_CIMACEX_EPISODIOS_MULTICITASRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SP_CIMACEX_EPISODIOS_MULTICITASRowChangingEvent) Is Nothing) Then
                RaiseEvent SP_CIMACEX_EPISODIOS_MULTICITASRowChanging(Me, New SP_CIMACEX_EPISODIOS_MULTICITASRowChangeEvent(CType(e.Row,SP_CIMACEX_EPISODIOS_MULTICITASRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SP_CIMACEX_EPISODIOS_MULTICITASRowDeletedEvent) Is Nothing) Then
                RaiseEvent SP_CIMACEX_EPISODIOS_MULTICITASRowDeleted(Me, New SP_CIMACEX_EPISODIOS_MULTICITASRowChangeEvent(CType(e.Row,SP_CIMACEX_EPISODIOS_MULTICITASRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SP_CIMACEX_EPISODIOS_MULTICITASRowDeletingEvent) Is Nothing) Then
                RaiseEvent SP_CIMACEX_EPISODIOS_MULTICITASRowDeleting(Me, New SP_CIMACEX_EPISODIOS_MULTICITASRowChangeEvent(CType(e.Row,SP_CIMACEX_EPISODIOS_MULTICITASRow), e.Action))
            End If
        End Sub
        
        Public Sub RemoveSP_CIMACEX_EPISODIOS_MULTICITASRow(ByVal row As SP_CIMACEX_EPISODIOS_MULTICITASRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class SP_CIMACEX_EPISODIOS_MULTICITASRow
        Inherits DataRow
        
        Private tableSP_CIMACEX_EPISODIOS_MULTICITAS As SP_CIMACEX_EPISODIOS_MULTICITASDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tableSP_CIMACEX_EPISODIOS_MULTICITAS = CType(Me.Table,SP_CIMACEX_EPISODIOS_MULTICITASDataTable)
        End Sub
        
        Public Property epis_key As Integer
            Get
                Return CType(Me(Me.tableSP_CIMACEX_EPISODIOS_MULTICITAS.epis_keyColumn),Integer)
            End Get
            Set
                Me(Me.tableSP_CIMACEX_EPISODIOS_MULTICITAS.epis_keyColumn) = value
            End Set
        End Property
        
        Public Property episcode As String
            Get
                Return CType(Me(Me.tableSP_CIMACEX_EPISODIOS_MULTICITAS.episcodeColumn),String)
            End Get
            Set
                Me(Me.tableSP_CIMACEX_EPISODIOS_MULTICITAS.episcodeColumn) = value
            End Set
        End Property
        
        Public Property clip_key As Integer
            Get
                Return CType(Me(Me.tableSP_CIMACEX_EPISODIOS_MULTICITAS.clip_keyColumn),Integer)
            End Get
            Set
                Me(Me.tableSP_CIMACEX_EPISODIOS_MULTICITAS.clip_keyColumn) = value
            End Set
        End Property
        
        Public Property tactdesc As String
            Get
                Return CType(Me(Me.tableSP_CIMACEX_EPISODIOS_MULTICITAS.tactdescColumn),String)
            End Get
            Set
                Me(Me.tableSP_CIMACEX_EPISODIOS_MULTICITAS.tactdescColumn) = value
            End Set
        End Property
        
        Public Property pers_key As Integer
            Get
                Return CType(Me(Me.tableSP_CIMACEX_EPISODIOS_MULTICITAS.pers_keyColumn),Integer)
            End Get
            Set
                Me(Me.tableSP_CIMACEX_EPISODIOS_MULTICITAS.pers_keyColumn) = value
            End Set
        End Property
        
        Public Property pati_hfn As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSP_CIMACEX_EPISODIOS_MULTICITAS.pati_hfnColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_CIMACEX_EPISODIOS_MULTICITAS.pati_hfnColumn) = value
            End Set
        End Property
        
        Public Property cstadesclong As String
            Get
                Try 
                    Return CType(Me(Me.tableSP_CIMACEX_EPISODIOS_MULTICITAS.cstadesclongColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_CIMACEX_EPISODIOS_MULTICITAS.cstadesclongColumn) = value
            End Set
        End Property
        
        Public Property perssur1 As String
            Get
                Try 
                    Return CType(Me(Me.tableSP_CIMACEX_EPISODIOS_MULTICITAS.perssur1Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_CIMACEX_EPISODIOS_MULTICITAS.perssur1Column) = value
            End Set
        End Property
        
        Public Property perssur2 As String
            Get
                Try 
                    Return CType(Me(Me.tableSP_CIMACEX_EPISODIOS_MULTICITAS.perssur2Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_CIMACEX_EPISODIOS_MULTICITAS.perssur2Column) = value
            End Set
        End Property
        
        Public Property persname As String
            Get
                Try 
                    Return CType(Me(Me.tableSP_CIMACEX_EPISODIOS_MULTICITAS.persnameColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_CIMACEX_EPISODIOS_MULTICITAS.persnameColumn) = value
            End Set
        End Property
        
        Public Property episdatecrea As String
            Get
                Try 
                    Return CType(Me(Me.tableSP_CIMACEX_EPISODIOS_MULTICITAS.episdatecreaColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_CIMACEX_EPISODIOS_MULTICITAS.episdatecreaColumn) = value
            End Set
        End Property
        
        Public Property episcstadateinit As String
            Get
                Try 
                    Return CType(Me(Me.tableSP_CIMACEX_EPISODIOS_MULTICITAS.episcstadateinitColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_CIMACEX_EPISODIOS_MULTICITAS.episcstadateinitColumn) = value
            End Set
        End Property
        
        Public Property episcstadate_end As String
            Get
                Try 
                    Return CType(Me(Me.tableSP_CIMACEX_EPISODIOS_MULTICITAS.episcstadate_endColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_CIMACEX_EPISODIOS_MULTICITAS.episcstadate_endColumn) = value
            End Set
        End Property
        
        Public Property episopen As String
            Get
                Return CType(Me(Me.tableSP_CIMACEX_EPISODIOS_MULTICITAS.episopenColumn),String)
            End Get
            Set
                Me(Me.tableSP_CIMACEX_EPISODIOS_MULTICITAS.episopenColumn) = value
            End Set
        End Property
        
        Public Property hprodesclong As String
            Get
                Try 
                    Return CType(Me(Me.tableSP_CIMACEX_EPISODIOS_MULTICITAS.hprodesclongColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_CIMACEX_EPISODIOS_MULTICITAS.hprodesclongColumn) = value
            End Set
        End Property
        
        Public Function Ispati_hfnNull() As Boolean
            Return Me.IsNull(Me.tableSP_CIMACEX_EPISODIOS_MULTICITAS.pati_hfnColumn)
        End Function
        
        Public Sub Setpati_hfnNull()
            Me(Me.tableSP_CIMACEX_EPISODIOS_MULTICITAS.pati_hfnColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IscstadesclongNull() As Boolean
            Return Me.IsNull(Me.tableSP_CIMACEX_EPISODIOS_MULTICITAS.cstadesclongColumn)
        End Function
        
        Public Sub SetcstadesclongNull()
            Me(Me.tableSP_CIMACEX_EPISODIOS_MULTICITAS.cstadesclongColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isperssur1Null() As Boolean
            Return Me.IsNull(Me.tableSP_CIMACEX_EPISODIOS_MULTICITAS.perssur1Column)
        End Function
        
        Public Sub Setperssur1Null()
            Me(Me.tableSP_CIMACEX_EPISODIOS_MULTICITAS.perssur1Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isperssur2Null() As Boolean
            Return Me.IsNull(Me.tableSP_CIMACEX_EPISODIOS_MULTICITAS.perssur2Column)
        End Function
        
        Public Sub Setperssur2Null()
            Me(Me.tableSP_CIMACEX_EPISODIOS_MULTICITAS.perssur2Column) = System.Convert.DBNull
        End Sub
        
        Public Function IspersnameNull() As Boolean
            Return Me.IsNull(Me.tableSP_CIMACEX_EPISODIOS_MULTICITAS.persnameColumn)
        End Function
        
        Public Sub SetpersnameNull()
            Me(Me.tableSP_CIMACEX_EPISODIOS_MULTICITAS.persnameColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsepisdatecreaNull() As Boolean
            Return Me.IsNull(Me.tableSP_CIMACEX_EPISODIOS_MULTICITAS.episdatecreaColumn)
        End Function
        
        Public Sub SetepisdatecreaNull()
            Me(Me.tableSP_CIMACEX_EPISODIOS_MULTICITAS.episdatecreaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsepiscstadateinitNull() As Boolean
            Return Me.IsNull(Me.tableSP_CIMACEX_EPISODIOS_MULTICITAS.episcstadateinitColumn)
        End Function
        
        Public Sub SetepiscstadateinitNull()
            Me(Me.tableSP_CIMACEX_EPISODIOS_MULTICITAS.episcstadateinitColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isepiscstadate_endNull() As Boolean
            Return Me.IsNull(Me.tableSP_CIMACEX_EPISODIOS_MULTICITAS.episcstadate_endColumn)
        End Function
        
        Public Sub Setepiscstadate_endNull()
            Me(Me.tableSP_CIMACEX_EPISODIOS_MULTICITAS.episcstadate_endColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IshprodesclongNull() As Boolean
            Return Me.IsNull(Me.tableSP_CIMACEX_EPISODIOS_MULTICITAS.hprodesclongColumn)
        End Function
        
        Public Sub SethprodesclongNull()
            Me(Me.tableSP_CIMACEX_EPISODIOS_MULTICITAS.hprodesclongColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class SP_CIMACEX_EPISODIOS_MULTICITASRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As SP_CIMACEX_EPISODIOS_MULTICITASRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As SP_CIMACEX_EPISODIOS_MULTICITASRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As SP_CIMACEX_EPISODIOS_MULTICITASRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

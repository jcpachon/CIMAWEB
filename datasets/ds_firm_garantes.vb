'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.2300
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.Data
Imports System.Runtime.Serialization
Imports System.Xml


<Serializable(),  _
 System.ComponentModel.DesignerCategoryAttribute("code"),  _
 System.Diagnostics.DebuggerStepThrough(),  _
 System.ComponentModel.ToolboxItem(true)>  _
Public Class ds_firm_garantes
    Inherits DataSet
    
    Private tablefirm As firmDataTable
    
    Public Sub New()
        MyBase.New
        Me.InitClass
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler Me.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    Protected Sub New(ByVal info As SerializationInfo, ByVal context As StreamingContext)
        MyBase.New
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(System.String)),String)
        If (Not (strSchema) Is Nothing) Then
            Dim ds As DataSet = New DataSet
            ds.ReadXmlSchema(New XmlTextReader(New System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("firm")) Is Nothing) Then
                Me.Tables.Add(New firmDataTable(ds.Tables("firm")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.InitClass
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler Me.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property firm As firmDataTable
        Get
            Return Me.tablefirm
        End Get
    End Property
    
    Public Overrides Function Clone() As DataSet
        Dim cln As ds_firm_garantes = CType(MyBase.Clone,ds_firm_garantes)
        cln.InitVars
        Return cln
    End Function
    
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As XmlReader)
        Me.Reset
        Dim ds As DataSet = New DataSet
        ds.ReadXml(reader)
        If (Not (ds.Tables("firm")) Is Nothing) Then
            Me.Tables.Add(New firmDataTable(ds.Tables("firm")))
        End If
        Me.DataSetName = ds.DataSetName
        Me.Prefix = ds.Prefix
        Me.Namespace = ds.Namespace
        Me.Locale = ds.Locale
        Me.CaseSensitive = ds.CaseSensitive
        Me.EnforceConstraints = ds.EnforceConstraints
        Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
        Me.InitVars
    End Sub
    
    Protected Overrides Function GetSchemaSerializable() As System.Xml.Schema.XmlSchema
        Dim stream As System.IO.MemoryStream = New System.IO.MemoryStream
        Me.WriteXmlSchema(New XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return System.Xml.Schema.XmlSchema.Read(New XmlTextReader(stream), Nothing)
    End Function
    
    Friend Sub InitVars()
        Me.tablefirm = CType(Me.Tables("firm"),firmDataTable)
        If (Not (Me.tablefirm) Is Nothing) Then
            Me.tablefirm.InitVars
        End If
    End Sub
    
    Private Sub InitClass()
        Me.DataSetName = "ds_firm_garantes"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/ds_firm_garantes.xsd"
        Me.Locale = New System.Globalization.CultureInfo("en-US")
        Me.CaseSensitive = false
        Me.EnforceConstraints = true
        Me.tablefirm = New firmDataTable
        Me.Tables.Add(Me.tablefirm)
    End Sub
    
    Private Function ShouldSerializefirm() As Boolean
        Return false
    End Function
    
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    Public Delegate Sub firmRowChangeEventHandler(ByVal sender As Object, ByVal e As firmRowChangeEvent)
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class firmDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnfirm_key As DataColumn
        
        Private columnaddrcodemain As DataColumn
        
        Private columnaddrcodedeli As DataColumn
        
        Private columnaddrcodeinvo As DataColumn
        
        Private columnttaxgfircode As DataColumn
        
        Private columnpaymdocucode As DataColumn
        
        Private columnfirmclascode As DataColumn
        
        Private columncurrcode As DataColumn
        
        Private columnlangcode As DataColumn
        
        Private columnaddrcodepaym As DataColumn
        
        Private columnplancode As DataColumn
        
        Private columnpayccode As DataColumn
        
        Private columnidenfirmcode As DataColumn
        
        Private columnfirmcode As DataColumn
        
        Private columnfirmname As DataColumn
        
        Private columnfirmnamecomm As DataColumn
        
        Private columnfirmidencode As DataColumn
        
        Private columnfirmdateacti As DataColumn
        
        Private columnfirmrema As DataColumn
        
        Private columnfirmfilename As DataColumn
        
        Private columnfirmacti As DataColumn
        
        Private columnplancodeterr As DataColumn
        
        Private columntfircode As DataColumn
        
        Private columnfirmea13 As DataColumn
        
        Private columnfirm_abc As DataColumn
        
        Private columninvccode As DataColumn
        
        Private columnfirmguar As DataColumn
        
        Private columnfirmnameshor As DataColumn
        
        Private columnfunccodebrne As DataColumn
        
        Private columnfunccodeprpr As DataColumn
        
        Private columnfirm_keyfath As DataColumn
        
        Private columnfunccodebrnedeli As DataColumn
        
        Private columnfunccodeprprdeli As DataColumn
        
        Private columnfunccodebrneorde As DataColumn
        
        Private columnfunccodeprprorde As DataColumn
        
        Private columnbuni_key As DataColumn
        
        Private columncodetmplcode As DataColumn
        
        Private columnfunccodeacce As DataColumn
        
        Private columnfirmtrantime As DataColumn
        
        Private columnfirmpartserv As DataColumn
        
        Private columnfirmminiperc As DataColumn
        
        Private columnfirmrealqualctrl As DataColumn
        
        Private columnfirmleve As DataColumn
        
        Private columnfirmorde As DataColumn
        
        Private columnfirmdelidays As DataColumn
        
        Private columntxts_key As DataColumn
        
        Private columnfirmdatedrop As DataColumn
        
        Private columndocu_key As DataColumn
        
        Private columnplancodeter2 As DataColumn
        
        Private columnaddrcodezone As DataColumn
        
        Private columntfircod2 As DataColumn
        
        Private columnplancodefir2 As DataColumn
        
        Private columnfirminvonumb As DataColumn
        
        Private columnfirm_keytabl As DataColumn
        
        Private columntablcode As DataColumn
        
        Private columntrac_key As DataColumn
        
        Friend Sub New()
            MyBase.New("firm")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property firm_keyColumn As DataColumn
            Get
                Return Me.columnfirm_key
            End Get
        End Property
        
        Friend ReadOnly Property addrcodemainColumn As DataColumn
            Get
                Return Me.columnaddrcodemain
            End Get
        End Property
        
        Friend ReadOnly Property addrcodedeliColumn As DataColumn
            Get
                Return Me.columnaddrcodedeli
            End Get
        End Property
        
        Friend ReadOnly Property addrcodeinvoColumn As DataColumn
            Get
                Return Me.columnaddrcodeinvo
            End Get
        End Property
        
        Friend ReadOnly Property ttaxgfircodeColumn As DataColumn
            Get
                Return Me.columnttaxgfircode
            End Get
        End Property
        
        Friend ReadOnly Property paymdocucodeColumn As DataColumn
            Get
                Return Me.columnpaymdocucode
            End Get
        End Property
        
        Friend ReadOnly Property firmclascodeColumn As DataColumn
            Get
                Return Me.columnfirmclascode
            End Get
        End Property
        
        Friend ReadOnly Property currcodeColumn As DataColumn
            Get
                Return Me.columncurrcode
            End Get
        End Property
        
        Friend ReadOnly Property langcodeColumn As DataColumn
            Get
                Return Me.columnlangcode
            End Get
        End Property
        
        Friend ReadOnly Property addrcodepaymColumn As DataColumn
            Get
                Return Me.columnaddrcodepaym
            End Get
        End Property
        
        Friend ReadOnly Property plancodeColumn As DataColumn
            Get
                Return Me.columnplancode
            End Get
        End Property
        
        Friend ReadOnly Property payccodeColumn As DataColumn
            Get
                Return Me.columnpayccode
            End Get
        End Property
        
        Friend ReadOnly Property idenfirmcodeColumn As DataColumn
            Get
                Return Me.columnidenfirmcode
            End Get
        End Property
        
        Friend ReadOnly Property firmcodeColumn As DataColumn
            Get
                Return Me.columnfirmcode
            End Get
        End Property
        
        Friend ReadOnly Property firmnameColumn As DataColumn
            Get
                Return Me.columnfirmname
            End Get
        End Property
        
        Friend ReadOnly Property firmnamecommColumn As DataColumn
            Get
                Return Me.columnfirmnamecomm
            End Get
        End Property
        
        Friend ReadOnly Property firmidencodeColumn As DataColumn
            Get
                Return Me.columnfirmidencode
            End Get
        End Property
        
        Friend ReadOnly Property firmdateactiColumn As DataColumn
            Get
                Return Me.columnfirmdateacti
            End Get
        End Property
        
        Friend ReadOnly Property firmremaColumn As DataColumn
            Get
                Return Me.columnfirmrema
            End Get
        End Property
        
        Friend ReadOnly Property firmfilenameColumn As DataColumn
            Get
                Return Me.columnfirmfilename
            End Get
        End Property
        
        Friend ReadOnly Property firmactiColumn As DataColumn
            Get
                Return Me.columnfirmacti
            End Get
        End Property
        
        Friend ReadOnly Property plancodeterrColumn As DataColumn
            Get
                Return Me.columnplancodeterr
            End Get
        End Property
        
        Friend ReadOnly Property tfircodeColumn As DataColumn
            Get
                Return Me.columntfircode
            End Get
        End Property
        
        Friend ReadOnly Property firmea13Column As DataColumn
            Get
                Return Me.columnfirmea13
            End Get
        End Property
        
        Friend ReadOnly Property firm_abcColumn As DataColumn
            Get
                Return Me.columnfirm_abc
            End Get
        End Property
        
        Friend ReadOnly Property invccodeColumn As DataColumn
            Get
                Return Me.columninvccode
            End Get
        End Property
        
        Friend ReadOnly Property firmguarColumn As DataColumn
            Get
                Return Me.columnfirmguar
            End Get
        End Property
        
        Friend ReadOnly Property firmnameshorColumn As DataColumn
            Get
                Return Me.columnfirmnameshor
            End Get
        End Property
        
        Friend ReadOnly Property funccodebrneColumn As DataColumn
            Get
                Return Me.columnfunccodebrne
            End Get
        End Property
        
        Friend ReadOnly Property funccodeprprColumn As DataColumn
            Get
                Return Me.columnfunccodeprpr
            End Get
        End Property
        
        Friend ReadOnly Property firm_keyfathColumn As DataColumn
            Get
                Return Me.columnfirm_keyfath
            End Get
        End Property
        
        Friend ReadOnly Property funccodebrnedeliColumn As DataColumn
            Get
                Return Me.columnfunccodebrnedeli
            End Get
        End Property
        
        Friend ReadOnly Property funccodeprprdeliColumn As DataColumn
            Get
                Return Me.columnfunccodeprprdeli
            End Get
        End Property
        
        Friend ReadOnly Property funccodebrneordeColumn As DataColumn
            Get
                Return Me.columnfunccodebrneorde
            End Get
        End Property
        
        Friend ReadOnly Property funccodeprprordeColumn As DataColumn
            Get
                Return Me.columnfunccodeprprorde
            End Get
        End Property
        
        Friend ReadOnly Property buni_keyColumn As DataColumn
            Get
                Return Me.columnbuni_key
            End Get
        End Property
        
        Friend ReadOnly Property codetmplcodeColumn As DataColumn
            Get
                Return Me.columncodetmplcode
            End Get
        End Property
        
        Friend ReadOnly Property funccodeacceColumn As DataColumn
            Get
                Return Me.columnfunccodeacce
            End Get
        End Property
        
        Friend ReadOnly Property firmtrantimeColumn As DataColumn
            Get
                Return Me.columnfirmtrantime
            End Get
        End Property
        
        Friend ReadOnly Property firmpartservColumn As DataColumn
            Get
                Return Me.columnfirmpartserv
            End Get
        End Property
        
        Friend ReadOnly Property firmminipercColumn As DataColumn
            Get
                Return Me.columnfirmminiperc
            End Get
        End Property
        
        Friend ReadOnly Property firmrealqualctrlColumn As DataColumn
            Get
                Return Me.columnfirmrealqualctrl
            End Get
        End Property
        
        Friend ReadOnly Property firmleveColumn As DataColumn
            Get
                Return Me.columnfirmleve
            End Get
        End Property
        
        Friend ReadOnly Property firmordeColumn As DataColumn
            Get
                Return Me.columnfirmorde
            End Get
        End Property
        
        Friend ReadOnly Property firmdelidaysColumn As DataColumn
            Get
                Return Me.columnfirmdelidays
            End Get
        End Property
        
        Friend ReadOnly Property txts_keyColumn As DataColumn
            Get
                Return Me.columntxts_key
            End Get
        End Property
        
        Friend ReadOnly Property firmdatedropColumn As DataColumn
            Get
                Return Me.columnfirmdatedrop
            End Get
        End Property
        
        Friend ReadOnly Property docu_keyColumn As DataColumn
            Get
                Return Me.columndocu_key
            End Get
        End Property
        
        Friend ReadOnly Property plancodeter2Column As DataColumn
            Get
                Return Me.columnplancodeter2
            End Get
        End Property
        
        Friend ReadOnly Property addrcodezoneColumn As DataColumn
            Get
                Return Me.columnaddrcodezone
            End Get
        End Property
        
        Friend ReadOnly Property tfircod2Column As DataColumn
            Get
                Return Me.columntfircod2
            End Get
        End Property
        
        Friend ReadOnly Property plancodefir2Column As DataColumn
            Get
                Return Me.columnplancodefir2
            End Get
        End Property
        
        Friend ReadOnly Property firminvonumbColumn As DataColumn
            Get
                Return Me.columnfirminvonumb
            End Get
        End Property
        
        Friend ReadOnly Property firm_keytablColumn As DataColumn
            Get
                Return Me.columnfirm_keytabl
            End Get
        End Property
        
        Friend ReadOnly Property tablcodeColumn As DataColumn
            Get
                Return Me.columntablcode
            End Get
        End Property
        
        Friend ReadOnly Property trac_keyColumn As DataColumn
            Get
                Return Me.columntrac_key
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As firmRow
            Get
                Return CType(Me.Rows(index),firmRow)
            End Get
        End Property
        
        Public Event firmRowChanged As firmRowChangeEventHandler
        
        Public Event firmRowChanging As firmRowChangeEventHandler
        
        Public Event firmRowDeleted As firmRowChangeEventHandler
        
        Public Event firmRowDeleting As firmRowChangeEventHandler
        
        Public Overloads Sub AddfirmRow(ByVal row As firmRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function AddfirmRow( _
                    ByVal firm_key As Integer,  _
                    ByVal addrcodemain As Integer,  _
                    ByVal addrcodedeli As Integer,  _
                    ByVal addrcodeinvo As Integer,  _
                    ByVal ttaxgfircode As String,  _
                    ByVal paymdocucode As String,  _
                    ByVal firmclascode As String,  _
                    ByVal currcode As String,  _
                    ByVal langcode As String,  _
                    ByVal addrcodepaym As Integer,  _
                    ByVal plancode As String,  _
                    ByVal payccode As String,  _
                    ByVal idenfirmcode As String,  _
                    ByVal firmcode As String,  _
                    ByVal firmname As String,  _
                    ByVal firmnamecomm As String,  _
                    ByVal firmidencode As String,  _
                    ByVal firmdateacti As Date,  _
                    ByVal firmrema As String,  _
                    ByVal firmfilename As String,  _
                    ByVal firmacti As String,  _
                    ByVal plancodeterr As String,  _
                    ByVal tfircode As String,  _
                    ByVal firmea13 As String,  _
                    ByVal firm_abc As String,  _
                    ByVal invccode As String,  _
                    ByVal firmguar As String,  _
                    ByVal firmnameshor As String,  _
                    ByVal funccodebrne As Integer,  _
                    ByVal funccodeprpr As Integer,  _
                    ByVal firm_keyfath As Integer,  _
                    ByVal funccodebrnedeli As Integer,  _
                    ByVal funccodeprprdeli As Integer,  _
                    ByVal funccodebrneorde As Integer,  _
                    ByVal funccodeprprorde As Integer,  _
                    ByVal buni_key As Integer,  _
                    ByVal codetmplcode As String,  _
                    ByVal funccodeacce As Integer,  _
                    ByVal firmtrantime As Short,  _
                    ByVal firmpartserv As String,  _
                    ByVal firmminiperc As Decimal,  _
                    ByVal firmrealqualctrl As String,  _
                    ByVal firmleve As Short,  _
                    ByVal firmorde As Short,  _
                    ByVal firmdelidays As Short,  _
                    ByVal txts_key As Integer,  _
                    ByVal firmdatedrop As Date,  _
                    ByVal docu_key As Integer,  _
                    ByVal plancodeter2 As String,  _
                    ByVal addrcodezone As Integer,  _
                    ByVal tfircod2 As String,  _
                    ByVal plancodefir2 As String,  _
                    ByVal firminvonumb As Short,  _
                    ByVal firm_keytabl As Integer,  _
                    ByVal tablcode As String,  _
                    ByVal trac_key As Integer) As firmRow
            Dim rowfirmRow As firmRow = CType(Me.NewRow,firmRow)
            rowfirmRow.ItemArray = New Object() {firm_key, addrcodemain, addrcodedeli, addrcodeinvo, ttaxgfircode, paymdocucode, firmclascode, currcode, langcode, addrcodepaym, plancode, payccode, idenfirmcode, firmcode, firmname, firmnamecomm, firmidencode, firmdateacti, firmrema, firmfilename, firmacti, plancodeterr, tfircode, firmea13, firm_abc, invccode, firmguar, firmnameshor, funccodebrne, funccodeprpr, firm_keyfath, funccodebrnedeli, funccodeprprdeli, funccodebrneorde, funccodeprprorde, buni_key, codetmplcode, funccodeacce, firmtrantime, firmpartserv, firmminiperc, firmrealqualctrl, firmleve, firmorde, firmdelidays, txts_key, firmdatedrop, docu_key, plancodeter2, addrcodezone, tfircod2, plancodefir2, firminvonumb, firm_keytabl, tablcode, trac_key}
            Me.Rows.Add(rowfirmRow)
            Return rowfirmRow
        End Function
        
        Public Function FindByfirm_key(ByVal firm_key As Integer) As firmRow
            Return CType(Me.Rows.Find(New Object() {firm_key}),firmRow)
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As firmDataTable = CType(MyBase.Clone,firmDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New firmDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnfirm_key = Me.Columns("firm_key")
            Me.columnaddrcodemain = Me.Columns("addrcodemain")
            Me.columnaddrcodedeli = Me.Columns("addrcodedeli")
            Me.columnaddrcodeinvo = Me.Columns("addrcodeinvo")
            Me.columnttaxgfircode = Me.Columns("ttaxgfircode")
            Me.columnpaymdocucode = Me.Columns("paymdocucode")
            Me.columnfirmclascode = Me.Columns("firmclascode")
            Me.columncurrcode = Me.Columns("currcode")
            Me.columnlangcode = Me.Columns("langcode")
            Me.columnaddrcodepaym = Me.Columns("addrcodepaym")
            Me.columnplancode = Me.Columns("plancode")
            Me.columnpayccode = Me.Columns("payccode")
            Me.columnidenfirmcode = Me.Columns("idenfirmcode")
            Me.columnfirmcode = Me.Columns("firmcode")
            Me.columnfirmname = Me.Columns("firmname")
            Me.columnfirmnamecomm = Me.Columns("firmnamecomm")
            Me.columnfirmidencode = Me.Columns("firmidencode")
            Me.columnfirmdateacti = Me.Columns("firmdateacti")
            Me.columnfirmrema = Me.Columns("firmrema")
            Me.columnfirmfilename = Me.Columns("firmfilename")
            Me.columnfirmacti = Me.Columns("firmacti")
            Me.columnplancodeterr = Me.Columns("plancodeterr")
            Me.columntfircode = Me.Columns("tfircode")
            Me.columnfirmea13 = Me.Columns("firmea13")
            Me.columnfirm_abc = Me.Columns("firm_abc")
            Me.columninvccode = Me.Columns("invccode")
            Me.columnfirmguar = Me.Columns("firmguar")
            Me.columnfirmnameshor = Me.Columns("firmnameshor")
            Me.columnfunccodebrne = Me.Columns("funccodebrne")
            Me.columnfunccodeprpr = Me.Columns("funccodeprpr")
            Me.columnfirm_keyfath = Me.Columns("firm_keyfath")
            Me.columnfunccodebrnedeli = Me.Columns("funccodebrnedeli")
            Me.columnfunccodeprprdeli = Me.Columns("funccodeprprdeli")
            Me.columnfunccodebrneorde = Me.Columns("funccodebrneorde")
            Me.columnfunccodeprprorde = Me.Columns("funccodeprprorde")
            Me.columnbuni_key = Me.Columns("buni_key")
            Me.columncodetmplcode = Me.Columns("codetmplcode")
            Me.columnfunccodeacce = Me.Columns("funccodeacce")
            Me.columnfirmtrantime = Me.Columns("firmtrantime")
            Me.columnfirmpartserv = Me.Columns("firmpartserv")
            Me.columnfirmminiperc = Me.Columns("firmminiperc")
            Me.columnfirmrealqualctrl = Me.Columns("firmrealqualctrl")
            Me.columnfirmleve = Me.Columns("firmleve")
            Me.columnfirmorde = Me.Columns("firmorde")
            Me.columnfirmdelidays = Me.Columns("firmdelidays")
            Me.columntxts_key = Me.Columns("txts_key")
            Me.columnfirmdatedrop = Me.Columns("firmdatedrop")
            Me.columndocu_key = Me.Columns("docu_key")
            Me.columnplancodeter2 = Me.Columns("plancodeter2")
            Me.columnaddrcodezone = Me.Columns("addrcodezone")
            Me.columntfircod2 = Me.Columns("tfircod2")
            Me.columnplancodefir2 = Me.Columns("plancodefir2")
            Me.columnfirminvonumb = Me.Columns("firminvonumb")
            Me.columnfirm_keytabl = Me.Columns("firm_keytabl")
            Me.columntablcode = Me.Columns("tablcode")
            Me.columntrac_key = Me.Columns("trac_key")
        End Sub
        
        Private Sub InitClass()
            Me.columnfirm_key = New DataColumn("firm_key", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfirm_key)
            Me.columnaddrcodemain = New DataColumn("addrcodemain", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnaddrcodemain)
            Me.columnaddrcodedeli = New DataColumn("addrcodedeli", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnaddrcodedeli)
            Me.columnaddrcodeinvo = New DataColumn("addrcodeinvo", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnaddrcodeinvo)
            Me.columnttaxgfircode = New DataColumn("ttaxgfircode", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnttaxgfircode)
            Me.columnpaymdocucode = New DataColumn("paymdocucode", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnpaymdocucode)
            Me.columnfirmclascode = New DataColumn("firmclascode", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfirmclascode)
            Me.columncurrcode = New DataColumn("currcode", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncurrcode)
            Me.columnlangcode = New DataColumn("langcode", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnlangcode)
            Me.columnaddrcodepaym = New DataColumn("addrcodepaym", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnaddrcodepaym)
            Me.columnplancode = New DataColumn("plancode", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnplancode)
            Me.columnpayccode = New DataColumn("payccode", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnpayccode)
            Me.columnidenfirmcode = New DataColumn("idenfirmcode", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnidenfirmcode)
            Me.columnfirmcode = New DataColumn("firmcode", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfirmcode)
            Me.columnfirmname = New DataColumn("firmname", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfirmname)
            Me.columnfirmnamecomm = New DataColumn("firmnamecomm", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfirmnamecomm)
            Me.columnfirmidencode = New DataColumn("firmidencode", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfirmidencode)
            Me.columnfirmdateacti = New DataColumn("firmdateacti", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfirmdateacti)
            Me.columnfirmrema = New DataColumn("firmrema", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfirmrema)
            Me.columnfirmfilename = New DataColumn("firmfilename", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfirmfilename)
            Me.columnfirmacti = New DataColumn("firmacti", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfirmacti)
            Me.columnplancodeterr = New DataColumn("plancodeterr", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnplancodeterr)
            Me.columntfircode = New DataColumn("tfircode", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columntfircode)
            Me.columnfirmea13 = New DataColumn("firmea13", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfirmea13)
            Me.columnfirm_abc = New DataColumn("firm_abc", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfirm_abc)
            Me.columninvccode = New DataColumn("invccode", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columninvccode)
            Me.columnfirmguar = New DataColumn("firmguar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfirmguar)
            Me.columnfirmnameshor = New DataColumn("firmnameshor", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfirmnameshor)
            Me.columnfunccodebrne = New DataColumn("funccodebrne", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfunccodebrne)
            Me.columnfunccodeprpr = New DataColumn("funccodeprpr", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfunccodeprpr)
            Me.columnfirm_keyfath = New DataColumn("firm_keyfath", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfirm_keyfath)
            Me.columnfunccodebrnedeli = New DataColumn("funccodebrnedeli", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfunccodebrnedeli)
            Me.columnfunccodeprprdeli = New DataColumn("funccodeprprdeli", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfunccodeprprdeli)
            Me.columnfunccodebrneorde = New DataColumn("funccodebrneorde", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfunccodebrneorde)
            Me.columnfunccodeprprorde = New DataColumn("funccodeprprorde", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfunccodeprprorde)
            Me.columnbuni_key = New DataColumn("buni_key", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnbuni_key)
            Me.columncodetmplcode = New DataColumn("codetmplcode", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncodetmplcode)
            Me.columnfunccodeacce = New DataColumn("funccodeacce", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfunccodeacce)
            Me.columnfirmtrantime = New DataColumn("firmtrantime", GetType(System.Int16), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfirmtrantime)
            Me.columnfirmpartserv = New DataColumn("firmpartserv", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfirmpartserv)
            Me.columnfirmminiperc = New DataColumn("firmminiperc", GetType(System.Decimal), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfirmminiperc)
            Me.columnfirmrealqualctrl = New DataColumn("firmrealqualctrl", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfirmrealqualctrl)
            Me.columnfirmleve = New DataColumn("firmleve", GetType(System.Int16), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfirmleve)
            Me.columnfirmorde = New DataColumn("firmorde", GetType(System.Int16), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfirmorde)
            Me.columnfirmdelidays = New DataColumn("firmdelidays", GetType(System.Int16), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfirmdelidays)
            Me.columntxts_key = New DataColumn("txts_key", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columntxts_key)
            Me.columnfirmdatedrop = New DataColumn("firmdatedrop", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfirmdatedrop)
            Me.columndocu_key = New DataColumn("docu_key", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columndocu_key)
            Me.columnplancodeter2 = New DataColumn("plancodeter2", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnplancodeter2)
            Me.columnaddrcodezone = New DataColumn("addrcodezone", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnaddrcodezone)
            Me.columntfircod2 = New DataColumn("tfircod2", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columntfircod2)
            Me.columnplancodefir2 = New DataColumn("plancodefir2", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnplancodefir2)
            Me.columnfirminvonumb = New DataColumn("firminvonumb", GetType(System.Int16), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfirminvonumb)
            Me.columnfirm_keytabl = New DataColumn("firm_keytabl", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfirm_keytabl)
            Me.columntablcode = New DataColumn("tablcode", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columntablcode)
            Me.columntrac_key = New DataColumn("trac_key", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columntrac_key)
            Me.Constraints.Add(New UniqueConstraint("ds_firm_garantesKey1", New DataColumn() {Me.columnfirm_key}, true))
            Me.columnfirm_key.AllowDBNull = false
            Me.columnfirm_key.Unique = true
            Me.columnttaxgfircode.AllowDBNull = false
            Me.columnpaymdocucode.AllowDBNull = false
            Me.columncurrcode.AllowDBNull = false
            Me.columnplancode.AllowDBNull = false
            Me.columnpayccode.AllowDBNull = false
            Me.columnfirmcode.AllowDBNull = false
            Me.columnfirmname.AllowDBNull = false
            Me.columnfirmacti.AllowDBNull = false
            Me.columntfircode.AllowDBNull = false
            Me.columninvccode.AllowDBNull = false
            Me.columnfirmguar.AllowDBNull = false
            Me.columnfirmpartserv.AllowDBNull = false
            Me.columnfirmrealqualctrl.AllowDBNull = false
        End Sub
        
        Public Function NewfirmRow() As firmRow
            Return CType(Me.NewRow,firmRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New firmRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(firmRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.firmRowChangedEvent) Is Nothing) Then
                RaiseEvent firmRowChanged(Me, New firmRowChangeEvent(CType(e.Row,firmRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.firmRowChangingEvent) Is Nothing) Then
                RaiseEvent firmRowChanging(Me, New firmRowChangeEvent(CType(e.Row,firmRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.firmRowDeletedEvent) Is Nothing) Then
                RaiseEvent firmRowDeleted(Me, New firmRowChangeEvent(CType(e.Row,firmRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.firmRowDeletingEvent) Is Nothing) Then
                RaiseEvent firmRowDeleting(Me, New firmRowChangeEvent(CType(e.Row,firmRow), e.Action))
            End If
        End Sub
        
        Public Sub RemovefirmRow(ByVal row As firmRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class firmRow
        Inherits DataRow
        
        Private tablefirm As firmDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tablefirm = CType(Me.Table,firmDataTable)
        End Sub
        
        Public Property firm_key As Integer
            Get
                Return CType(Me(Me.tablefirm.firm_keyColumn),Integer)
            End Get
            Set
                Me(Me.tablefirm.firm_keyColumn) = value
            End Set
        End Property
        
        Public Property addrcodemain As Integer
            Get
                Try 
                    Return CType(Me(Me.tablefirm.addrcodemainColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablefirm.addrcodemainColumn) = value
            End Set
        End Property
        
        Public Property addrcodedeli As Integer
            Get
                Try 
                    Return CType(Me(Me.tablefirm.addrcodedeliColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablefirm.addrcodedeliColumn) = value
            End Set
        End Property
        
        Public Property addrcodeinvo As Integer
            Get
                Try 
                    Return CType(Me(Me.tablefirm.addrcodeinvoColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablefirm.addrcodeinvoColumn) = value
            End Set
        End Property
        
        Public Property ttaxgfircode As String
            Get
                Return CType(Me(Me.tablefirm.ttaxgfircodeColumn),String)
            End Get
            Set
                Me(Me.tablefirm.ttaxgfircodeColumn) = value
            End Set
        End Property
        
        Public Property paymdocucode As String
            Get
                Return CType(Me(Me.tablefirm.paymdocucodeColumn),String)
            End Get
            Set
                Me(Me.tablefirm.paymdocucodeColumn) = value
            End Set
        End Property
        
        Public Property firmclascode As String
            Get
                Try 
                    Return CType(Me(Me.tablefirm.firmclascodeColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablefirm.firmclascodeColumn) = value
            End Set
        End Property
        
        Public Property currcode As String
            Get
                Return CType(Me(Me.tablefirm.currcodeColumn),String)
            End Get
            Set
                Me(Me.tablefirm.currcodeColumn) = value
            End Set
        End Property
        
        Public Property langcode As String
            Get
                Try 
                    Return CType(Me(Me.tablefirm.langcodeColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablefirm.langcodeColumn) = value
            End Set
        End Property
        
        Public Property addrcodepaym As Integer
            Get
                Try 
                    Return CType(Me(Me.tablefirm.addrcodepaymColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablefirm.addrcodepaymColumn) = value
            End Set
        End Property
        
        Public Property plancode As String
            Get
                Return CType(Me(Me.tablefirm.plancodeColumn),String)
            End Get
            Set
                Me(Me.tablefirm.plancodeColumn) = value
            End Set
        End Property
        
        Public Property payccode As String
            Get
                Return CType(Me(Me.tablefirm.payccodeColumn),String)
            End Get
            Set
                Me(Me.tablefirm.payccodeColumn) = value
            End Set
        End Property
        
        Public Property idenfirmcode As String
            Get
                Try 
                    Return CType(Me(Me.tablefirm.idenfirmcodeColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablefirm.idenfirmcodeColumn) = value
            End Set
        End Property
        
        Public Property firmcode As String
            Get
                Return CType(Me(Me.tablefirm.firmcodeColumn),String)
            End Get
            Set
                Me(Me.tablefirm.firmcodeColumn) = value
            End Set
        End Property
        
        Public Property firmname As String
            Get
                Return CType(Me(Me.tablefirm.firmnameColumn),String)
            End Get
            Set
                Me(Me.tablefirm.firmnameColumn) = value
            End Set
        End Property
        
        Public Property firmnamecomm As String
            Get
                Try 
                    Return CType(Me(Me.tablefirm.firmnamecommColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablefirm.firmnamecommColumn) = value
            End Set
        End Property
        
        Public Property firmidencode As String
            Get
                Try 
                    Return CType(Me(Me.tablefirm.firmidencodeColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablefirm.firmidencodeColumn) = value
            End Set
        End Property
        
        Public Property firmdateacti As Date
            Get
                Try 
                    Return CType(Me(Me.tablefirm.firmdateactiColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablefirm.firmdateactiColumn) = value
            End Set
        End Property
        
        Public Property firmrema As String
            Get
                Try 
                    Return CType(Me(Me.tablefirm.firmremaColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablefirm.firmremaColumn) = value
            End Set
        End Property
        
        Public Property firmfilename As String
            Get
                Try 
                    Return CType(Me(Me.tablefirm.firmfilenameColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablefirm.firmfilenameColumn) = value
            End Set
        End Property
        
        Public Property firmacti As String
            Get
                Return CType(Me(Me.tablefirm.firmactiColumn),String)
            End Get
            Set
                Me(Me.tablefirm.firmactiColumn) = value
            End Set
        End Property
        
        Public Property plancodeterr As String
            Get
                Try 
                    Return CType(Me(Me.tablefirm.plancodeterrColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablefirm.plancodeterrColumn) = value
            End Set
        End Property
        
        Public Property tfircode As String
            Get
                Return CType(Me(Me.tablefirm.tfircodeColumn),String)
            End Get
            Set
                Me(Me.tablefirm.tfircodeColumn) = value
            End Set
        End Property
        
        Public Property firmea13 As String
            Get
                Try 
                    Return CType(Me(Me.tablefirm.firmea13Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablefirm.firmea13Column) = value
            End Set
        End Property
        
        Public Property firm_abc As String
            Get
                Try 
                    Return CType(Me(Me.tablefirm.firm_abcColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablefirm.firm_abcColumn) = value
            End Set
        End Property
        
        Public Property invccode As String
            Get
                Return CType(Me(Me.tablefirm.invccodeColumn),String)
            End Get
            Set
                Me(Me.tablefirm.invccodeColumn) = value
            End Set
        End Property
        
        Public Property firmguar As String
            Get
                Return CType(Me(Me.tablefirm.firmguarColumn),String)
            End Get
            Set
                Me(Me.tablefirm.firmguarColumn) = value
            End Set
        End Property
        
        Public Property firmnameshor As String
            Get
                Try 
                    Return CType(Me(Me.tablefirm.firmnameshorColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablefirm.firmnameshorColumn) = value
            End Set
        End Property
        
        Public Property funccodebrne As Integer
            Get
                Try 
                    Return CType(Me(Me.tablefirm.funccodebrneColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablefirm.funccodebrneColumn) = value
            End Set
        End Property
        
        Public Property funccodeprpr As Integer
            Get
                Try 
                    Return CType(Me(Me.tablefirm.funccodeprprColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablefirm.funccodeprprColumn) = value
            End Set
        End Property
        
        Public Property firm_keyfath As Integer
            Get
                Try 
                    Return CType(Me(Me.tablefirm.firm_keyfathColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablefirm.firm_keyfathColumn) = value
            End Set
        End Property
        
        Public Property funccodebrnedeli As Integer
            Get
                Try 
                    Return CType(Me(Me.tablefirm.funccodebrnedeliColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablefirm.funccodebrnedeliColumn) = value
            End Set
        End Property
        
        Public Property funccodeprprdeli As Integer
            Get
                Try 
                    Return CType(Me(Me.tablefirm.funccodeprprdeliColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablefirm.funccodeprprdeliColumn) = value
            End Set
        End Property
        
        Public Property funccodebrneorde As Integer
            Get
                Try 
                    Return CType(Me(Me.tablefirm.funccodebrneordeColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablefirm.funccodebrneordeColumn) = value
            End Set
        End Property
        
        Public Property funccodeprprorde As Integer
            Get
                Try 
                    Return CType(Me(Me.tablefirm.funccodeprprordeColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablefirm.funccodeprprordeColumn) = value
            End Set
        End Property
        
        Public Property buni_key As Integer
            Get
                Try 
                    Return CType(Me(Me.tablefirm.buni_keyColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablefirm.buni_keyColumn) = value
            End Set
        End Property
        
        Public Property codetmplcode As String
            Get
                Try 
                    Return CType(Me(Me.tablefirm.codetmplcodeColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablefirm.codetmplcodeColumn) = value
            End Set
        End Property
        
        Public Property funccodeacce As Integer
            Get
                Try 
                    Return CType(Me(Me.tablefirm.funccodeacceColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablefirm.funccodeacceColumn) = value
            End Set
        End Property
        
        Public Property firmtrantime As Short
            Get
                Try 
                    Return CType(Me(Me.tablefirm.firmtrantimeColumn),Short)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablefirm.firmtrantimeColumn) = value
            End Set
        End Property
        
        Public Property firmpartserv As String
            Get
                Return CType(Me(Me.tablefirm.firmpartservColumn),String)
            End Get
            Set
                Me(Me.tablefirm.firmpartservColumn) = value
            End Set
        End Property
        
        Public Property firmminiperc As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablefirm.firmminipercColumn),Decimal)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablefirm.firmminipercColumn) = value
            End Set
        End Property
        
        Public Property firmrealqualctrl As String
            Get
                Return CType(Me(Me.tablefirm.firmrealqualctrlColumn),String)
            End Get
            Set
                Me(Me.tablefirm.firmrealqualctrlColumn) = value
            End Set
        End Property
        
        Public Property firmleve As Short
            Get
                Try 
                    Return CType(Me(Me.tablefirm.firmleveColumn),Short)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablefirm.firmleveColumn) = value
            End Set
        End Property
        
        Public Property firmorde As Short
            Get
                Try 
                    Return CType(Me(Me.tablefirm.firmordeColumn),Short)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablefirm.firmordeColumn) = value
            End Set
        End Property
        
        Public Property firmdelidays As Short
            Get
                Try 
                    Return CType(Me(Me.tablefirm.firmdelidaysColumn),Short)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablefirm.firmdelidaysColumn) = value
            End Set
        End Property
        
        Public Property txts_key As Integer
            Get
                Try 
                    Return CType(Me(Me.tablefirm.txts_keyColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablefirm.txts_keyColumn) = value
            End Set
        End Property
        
        Public Property firmdatedrop As Date
            Get
                Try 
                    Return CType(Me(Me.tablefirm.firmdatedropColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablefirm.firmdatedropColumn) = value
            End Set
        End Property
        
        Public Property docu_key As Integer
            Get
                Try 
                    Return CType(Me(Me.tablefirm.docu_keyColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablefirm.docu_keyColumn) = value
            End Set
        End Property
        
        Public Property plancodeter2 As String
            Get
                Try 
                    Return CType(Me(Me.tablefirm.plancodeter2Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablefirm.plancodeter2Column) = value
            End Set
        End Property
        
        Public Property addrcodezone As Integer
            Get
                Try 
                    Return CType(Me(Me.tablefirm.addrcodezoneColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablefirm.addrcodezoneColumn) = value
            End Set
        End Property
        
        Public Property tfircod2 As String
            Get
                Try 
                    Return CType(Me(Me.tablefirm.tfircod2Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablefirm.tfircod2Column) = value
            End Set
        End Property
        
        Public Property plancodefir2 As String
            Get
                Try 
                    Return CType(Me(Me.tablefirm.plancodefir2Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablefirm.plancodefir2Column) = value
            End Set
        End Property
        
        Public Property firminvonumb As Short
            Get
                Try 
                    Return CType(Me(Me.tablefirm.firminvonumbColumn),Short)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablefirm.firminvonumbColumn) = value
            End Set
        End Property
        
        Public Property firm_keytabl As Integer
            Get
                Try 
                    Return CType(Me(Me.tablefirm.firm_keytablColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablefirm.firm_keytablColumn) = value
            End Set
        End Property
        
        Public Property tablcode As String
            Get
                Try 
                    Return CType(Me(Me.tablefirm.tablcodeColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablefirm.tablcodeColumn) = value
            End Set
        End Property
        
        Public Property trac_key As Integer
            Get
                Try 
                    Return CType(Me(Me.tablefirm.trac_keyColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablefirm.trac_keyColumn) = value
            End Set
        End Property
        
        Public Function IsaddrcodemainNull() As Boolean
            Return Me.IsNull(Me.tablefirm.addrcodemainColumn)
        End Function
        
        Public Sub SetaddrcodemainNull()
            Me(Me.tablefirm.addrcodemainColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsaddrcodedeliNull() As Boolean
            Return Me.IsNull(Me.tablefirm.addrcodedeliColumn)
        End Function
        
        Public Sub SetaddrcodedeliNull()
            Me(Me.tablefirm.addrcodedeliColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsaddrcodeinvoNull() As Boolean
            Return Me.IsNull(Me.tablefirm.addrcodeinvoColumn)
        End Function
        
        Public Sub SetaddrcodeinvoNull()
            Me(Me.tablefirm.addrcodeinvoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfirmclascodeNull() As Boolean
            Return Me.IsNull(Me.tablefirm.firmclascodeColumn)
        End Function
        
        Public Sub SetfirmclascodeNull()
            Me(Me.tablefirm.firmclascodeColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IslangcodeNull() As Boolean
            Return Me.IsNull(Me.tablefirm.langcodeColumn)
        End Function
        
        Public Sub SetlangcodeNull()
            Me(Me.tablefirm.langcodeColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsaddrcodepaymNull() As Boolean
            Return Me.IsNull(Me.tablefirm.addrcodepaymColumn)
        End Function
        
        Public Sub SetaddrcodepaymNull()
            Me(Me.tablefirm.addrcodepaymColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsidenfirmcodeNull() As Boolean
            Return Me.IsNull(Me.tablefirm.idenfirmcodeColumn)
        End Function
        
        Public Sub SetidenfirmcodeNull()
            Me(Me.tablefirm.idenfirmcodeColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfirmnamecommNull() As Boolean
            Return Me.IsNull(Me.tablefirm.firmnamecommColumn)
        End Function
        
        Public Sub SetfirmnamecommNull()
            Me(Me.tablefirm.firmnamecommColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfirmidencodeNull() As Boolean
            Return Me.IsNull(Me.tablefirm.firmidencodeColumn)
        End Function
        
        Public Sub SetfirmidencodeNull()
            Me(Me.tablefirm.firmidencodeColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfirmdateactiNull() As Boolean
            Return Me.IsNull(Me.tablefirm.firmdateactiColumn)
        End Function
        
        Public Sub SetfirmdateactiNull()
            Me(Me.tablefirm.firmdateactiColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfirmremaNull() As Boolean
            Return Me.IsNull(Me.tablefirm.firmremaColumn)
        End Function
        
        Public Sub SetfirmremaNull()
            Me(Me.tablefirm.firmremaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfirmfilenameNull() As Boolean
            Return Me.IsNull(Me.tablefirm.firmfilenameColumn)
        End Function
        
        Public Sub SetfirmfilenameNull()
            Me(Me.tablefirm.firmfilenameColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsplancodeterrNull() As Boolean
            Return Me.IsNull(Me.tablefirm.plancodeterrColumn)
        End Function
        
        Public Sub SetplancodeterrNull()
            Me(Me.tablefirm.plancodeterrColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfirmea13Null() As Boolean
            Return Me.IsNull(Me.tablefirm.firmea13Column)
        End Function
        
        Public Sub Setfirmea13Null()
            Me(Me.tablefirm.firmea13Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isfirm_abcNull() As Boolean
            Return Me.IsNull(Me.tablefirm.firm_abcColumn)
        End Function
        
        Public Sub Setfirm_abcNull()
            Me(Me.tablefirm.firm_abcColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfirmnameshorNull() As Boolean
            Return Me.IsNull(Me.tablefirm.firmnameshorColumn)
        End Function
        
        Public Sub SetfirmnameshorNull()
            Me(Me.tablefirm.firmnameshorColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfunccodebrneNull() As Boolean
            Return Me.IsNull(Me.tablefirm.funccodebrneColumn)
        End Function
        
        Public Sub SetfunccodebrneNull()
            Me(Me.tablefirm.funccodebrneColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfunccodeprprNull() As Boolean
            Return Me.IsNull(Me.tablefirm.funccodeprprColumn)
        End Function
        
        Public Sub SetfunccodeprprNull()
            Me(Me.tablefirm.funccodeprprColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfirm_keyfathNull() As Boolean
            Return Me.IsNull(Me.tablefirm.firm_keyfathColumn)
        End Function
        
        Public Sub Setfirm_keyfathNull()
            Me(Me.tablefirm.firm_keyfathColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfunccodebrnedeliNull() As Boolean
            Return Me.IsNull(Me.tablefirm.funccodebrnedeliColumn)
        End Function
        
        Public Sub SetfunccodebrnedeliNull()
            Me(Me.tablefirm.funccodebrnedeliColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfunccodeprprdeliNull() As Boolean
            Return Me.IsNull(Me.tablefirm.funccodeprprdeliColumn)
        End Function
        
        Public Sub SetfunccodeprprdeliNull()
            Me(Me.tablefirm.funccodeprprdeliColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfunccodebrneordeNull() As Boolean
            Return Me.IsNull(Me.tablefirm.funccodebrneordeColumn)
        End Function
        
        Public Sub SetfunccodebrneordeNull()
            Me(Me.tablefirm.funccodebrneordeColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfunccodeprprordeNull() As Boolean
            Return Me.IsNull(Me.tablefirm.funccodeprprordeColumn)
        End Function
        
        Public Sub SetfunccodeprprordeNull()
            Me(Me.tablefirm.funccodeprprordeColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isbuni_keyNull() As Boolean
            Return Me.IsNull(Me.tablefirm.buni_keyColumn)
        End Function
        
        Public Sub Setbuni_keyNull()
            Me(Me.tablefirm.buni_keyColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IscodetmplcodeNull() As Boolean
            Return Me.IsNull(Me.tablefirm.codetmplcodeColumn)
        End Function
        
        Public Sub SetcodetmplcodeNull()
            Me(Me.tablefirm.codetmplcodeColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfunccodeacceNull() As Boolean
            Return Me.IsNull(Me.tablefirm.funccodeacceColumn)
        End Function
        
        Public Sub SetfunccodeacceNull()
            Me(Me.tablefirm.funccodeacceColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfirmtrantimeNull() As Boolean
            Return Me.IsNull(Me.tablefirm.firmtrantimeColumn)
        End Function
        
        Public Sub SetfirmtrantimeNull()
            Me(Me.tablefirm.firmtrantimeColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfirmminipercNull() As Boolean
            Return Me.IsNull(Me.tablefirm.firmminipercColumn)
        End Function
        
        Public Sub SetfirmminipercNull()
            Me(Me.tablefirm.firmminipercColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfirmleveNull() As Boolean
            Return Me.IsNull(Me.tablefirm.firmleveColumn)
        End Function
        
        Public Sub SetfirmleveNull()
            Me(Me.tablefirm.firmleveColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfirmordeNull() As Boolean
            Return Me.IsNull(Me.tablefirm.firmordeColumn)
        End Function
        
        Public Sub SetfirmordeNull()
            Me(Me.tablefirm.firmordeColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfirmdelidaysNull() As Boolean
            Return Me.IsNull(Me.tablefirm.firmdelidaysColumn)
        End Function
        
        Public Sub SetfirmdelidaysNull()
            Me(Me.tablefirm.firmdelidaysColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Istxts_keyNull() As Boolean
            Return Me.IsNull(Me.tablefirm.txts_keyColumn)
        End Function
        
        Public Sub Settxts_keyNull()
            Me(Me.tablefirm.txts_keyColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfirmdatedropNull() As Boolean
            Return Me.IsNull(Me.tablefirm.firmdatedropColumn)
        End Function
        
        Public Sub SetfirmdatedropNull()
            Me(Me.tablefirm.firmdatedropColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isdocu_keyNull() As Boolean
            Return Me.IsNull(Me.tablefirm.docu_keyColumn)
        End Function
        
        Public Sub Setdocu_keyNull()
            Me(Me.tablefirm.docu_keyColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isplancodeter2Null() As Boolean
            Return Me.IsNull(Me.tablefirm.plancodeter2Column)
        End Function
        
        Public Sub Setplancodeter2Null()
            Me(Me.tablefirm.plancodeter2Column) = System.Convert.DBNull
        End Sub
        
        Public Function IsaddrcodezoneNull() As Boolean
            Return Me.IsNull(Me.tablefirm.addrcodezoneColumn)
        End Function
        
        Public Sub SetaddrcodezoneNull()
            Me(Me.tablefirm.addrcodezoneColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Istfircod2Null() As Boolean
            Return Me.IsNull(Me.tablefirm.tfircod2Column)
        End Function
        
        Public Sub Settfircod2Null()
            Me(Me.tablefirm.tfircod2Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isplancodefir2Null() As Boolean
            Return Me.IsNull(Me.tablefirm.plancodefir2Column)
        End Function
        
        Public Sub Setplancodefir2Null()
            Me(Me.tablefirm.plancodefir2Column) = System.Convert.DBNull
        End Sub
        
        Public Function IsfirminvonumbNull() As Boolean
            Return Me.IsNull(Me.tablefirm.firminvonumbColumn)
        End Function
        
        Public Sub SetfirminvonumbNull()
            Me(Me.tablefirm.firminvonumbColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfirm_keytablNull() As Boolean
            Return Me.IsNull(Me.tablefirm.firm_keytablColumn)
        End Function
        
        Public Sub Setfirm_keytablNull()
            Me(Me.tablefirm.firm_keytablColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IstablcodeNull() As Boolean
            Return Me.IsNull(Me.tablefirm.tablcodeColumn)
        End Function
        
        Public Sub SettablcodeNull()
            Me(Me.tablefirm.tablcodeColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Istrac_keyNull() As Boolean
            Return Me.IsNull(Me.tablefirm.trac_keyColumn)
        End Function
        
        Public Sub Settrac_keyNull()
            Me(Me.tablefirm.trac_keyColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class firmRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As firmRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As firmRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As firmRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
